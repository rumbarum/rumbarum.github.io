<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[ 개발세발개발]]></title><description><![CDATA[개발자 성장일기]]></description><link>https://rumbarum.github.io/</link><generator>RSS for Node</generator><lastBuildDate>Fri, 09 Aug 2019 09:57:41 GMT</lastBuildDate><item><title><![CDATA[Html과 CSS 구조도 ]]></title><description><![CDATA[Html과 CSS 정리 ]]></description><link>https://rumbarum.github.io//posts/HtmlAndCss/</link><guid isPermaLink="false">https://rumbarum.github.io//posts/HtmlAndCss/</guid><pubDate>Thu, 01 Aug 2019 02:23:45 GMT</pubDate><content:encoded>&lt;h1 id=&quot;html&quot;&gt;&lt;a href=&quot;#html&quot; aria-label=&quot;html permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Html&lt;/h1&gt;
&lt;p&gt;웹문서 양식 -엘레멘트들을 모아 페이지를 구성&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://mdn.mozillademos.org/files/7659/anatomy-of-an-html-element.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.w3schools.com/js/pic_navigate.gif&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;셀렉터 적용 방법들&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A B  - A에 속한 B 엘리먼트&lt;/li&gt;
&lt;li&gt;A + B - A의 바로 다음 형제B&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;모든 엘리먼트&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;A * -  A 에 속한 모든 엘리먼트&lt;/li&gt;
&lt;li&gt;A ~B  - A를 따르는 모든 B&lt;/li&gt;
&lt;li&gt;A &gt; B - A의 직속자녀인 B&lt;/li&gt;
&lt;li&gt;A:first-child : 첫번째 A 엘리먼트&lt;/li&gt;
&lt;li&gt;A:only-child 혼자있는 A 엘리먼트 선택&lt;/li&gt;
&lt;li&gt;A :last-child 마지막 A 엘리먼트 선택&lt;/li&gt;
&lt;li&gt;A :nth-child(m) :m번째 , A 엘리먼트 선택&lt;/li&gt;
&lt;li&gt;A :nth-last-child(m) : 뒤에서 m 번째 A엘리먼트 선택&lt;/li&gt;
&lt;li&gt;A :first-of-type -첫번째 A 엘리먼트&lt;/li&gt;
&lt;li&gt;A: nth-of-type(odd / even) - 홀/짝 A 엘리먼트&lt;/li&gt;
&lt;li&gt;A: nth-of-type( Xn+B) - B순서부터 매 X번째 엘리먼트, B 포함됨&lt;/li&gt;
&lt;li&gt;A:only-of-type A 종류의 엘리먼트만 선택&lt;/li&gt;
&lt;li&gt;A:last-of-type : 마지막 A 엘리먼트&lt;/li&gt;
&lt;li&gt;A:empty 비어있는 모든 A 엘리먼트&lt;/li&gt;
&lt;li&gt;A:not(X) - X가 포함되어 있지 않은 모든 A , X는 id, class, tag 복수조건 가능하다.&lt;/li&gt;
&lt;li&gt;[attribute] attribute가진 엘리먼트&lt;/li&gt;
&lt;li&gt;A[attribute] attribute를 가진 A&lt;/li&gt;
&lt;li&gt;[attribute=“value”] - attribute===value&lt;/li&gt;
&lt;li&gt;[attribute^=“value”] - attibute가 value로 시작&lt;/li&gt;
&lt;li&gt;[attribute$=“value”] - attibute가 value로 종료&lt;/li&gt;
&lt;li&gt;[attribute*=“value”] -attibute가 value를 포함하고 있음&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;css&quot;&gt;&lt;a href=&quot;#css&quot; aria-label=&quot;css permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CSS&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;http://www.nextree.co.kr/content/images/2016/09/yrkim-140327-selector-04.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;css (Cascading Style Sheets, 종속형 스타일 시트) 작성법&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;엘레멘트에 직접 작성 - 코드 작성이 너저분해 지고 각개수정을 해야한다.&lt;/li&gt;
&lt;li&gt;태그에 직접 작성 - 코드가 늘어나서 가독성이 떨어진다.&lt;/li&gt;
&lt;li&gt;html 스타일 지정 - 전체 적용이 힘듦&lt;/li&gt;
&lt;li&gt;css 별도 파일 지정 - 원하는 타입별로 지정, 전체적용이파일 수정만하면 할수 있기 때문에 유지 보수가 간편해진다. 고로 css 별도파일로 진행&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;css 적용하기&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;css 셀렉터&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;셀렉터 구분&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;클래스와 ID들은 대소문자를 구분하며 문자로 시작해야 하며 영어, 숫자와 언더바(_), 대쉬(-)를 포함할 수 있다.&lt;/li&gt;
&lt;li&gt;클래스는 어떠한 수의 요소에도 적용할 수 있다.&lt;/li&gt;
&lt;li&gt;ID는 하나의 요소에만 적용할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;셀렉터 적용 순서&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ele &gt;&gt;&gt; cla&gt;&gt;, id &gt; , tag&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;상속과 그룹&lt;/p&gt;
&lt;p&gt; 묶어서 적용하기, 골라서 적용하기,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;p.pp  - p태그 이면서 pp클래스&lt;/li&gt;
&lt;li&gt;p .pp - p태그 아래의  pp클래스&lt;/li&gt;
&lt;li&gt;p#pp - p태그 이면서 pp아이디&lt;/li&gt;
&lt;li&gt;p #pp- - p태그 이면서 pp아이디&lt;/li&gt;
&lt;li&gt;p p p .pp #pp- p태그의 p태그의 p태그의 pp클래스의 pp 아이디&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;태그 속성 셀렉팅’tag::attribute { }’&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;동작 셀렉팅&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;마우스 변경 button:hover {cursor : pointer }&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;선언 (declaration) - 속성과 속성값을 지정한다.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;폰트 조절 속성들&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;폰트의 적용&lt;/li&gt;
&lt;li&gt;family -폰트 종류&lt;/li&gt;
&lt;li&gt;size -크기&lt;/li&gt;
&lt;li&gt;weight 굵기 일반 400, bold 700&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;문구 스타일&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;가, 왼, 오 정렬 =&gt; text-align : center, left, right&lt;/li&gt;
&lt;li&gt;  스페이스 삽입&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt; 인용문 삽입 태그
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;마진, 보더, 패딩&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;보더 : 선굵기, 스타일(solid, dot, dash…), 색상&lt;/li&gt;
&lt;li&gt;보더의 길이가 각기 다르게 설정가능하다.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;박스사이징&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;엘리 영역을 보더로 통일&lt;/li&gt;
&lt;li&gt;’ * {box-sizing: border-box;} ’&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;적용순서 - 위 오 아 왼 시계방향&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;margin, padding, border: 0px = 0px 0px 0px 0px&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;margin, padding, border: 0px 5 px = 0px 5px 0px 5px&lt;/li&gt;
&lt;li&gt;margin: ???px auto ; 로 좌우 같게 자동으로 할 수있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;웹페이지 이미지 삽입하기&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;img 태그 사용&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;css로도 삽입이 가능하다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;가로 화면 크기&lt;/li&gt;
&lt;li&gt;세로 div의 내용 만큼 사이즈&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;img 처럼 height,width 로 조정이 안될 수있다. 영역만 조정. 조정하려면 일치시켜야 한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;background-size : ~%&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;css- backgroundimage 와 img 의 차이&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;backgroundimage는 % 사이즈 조절이 가능함, -100보다 작으면 다중이미지, 크면 부&lt;/li&gt;
&lt;li&gt;img는 % 사이즈 조절이 불가능하다???&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;레이아웃&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;block vs inline&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;p, div, li, table ==(display : inline-block)==&gt;인라인&lt;/li&gt;
&lt;li&gt;span, img, a =(float: left || right , display: block )=&gt; 블록&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;가운데 정렬 위아래패딩 auto&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;list&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;리스트 스타일 dot, number, none&lt;/li&gt;
&lt;li&gt;리스트 셀렉터-&gt;셀렉터&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;table&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;테이블 구성요소&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;table, th (tr, td )&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;셀병합 ( 태그에 속성 삽입)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;가로 병합&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;colspan&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;세로병합&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;rowspan&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Input&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;type&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;text&lt;/li&gt;
&lt;li&gt;password&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;number&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;” - ” 삽입 불가&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;value 미리 설정해놓은값&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;place holder&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;셀렉트 ‘input::placeholder { }’&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;textarea input type=“text” 보다 긴 데이터 입력시 사용&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Position&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;relative 부모&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;absolute 자식 relative 부모가 없으면 작동이 안된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;절대 고정, 위아래로 움직이거나 말거나 상관없음 (부모안에서)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;레이아웃.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;semantic element - 담고있는 콘텐츠를 예상 할 수 있게 해주는 태그들&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;경험이 재산이다 .&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;header, asider, nav, footer, section, article, figure&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;float&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;레이아웃 구조짤때 활용하기 좋음&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mediaquery&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;사용자 환경변화에 따라 동적인 변화가능&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;추가 템플릿과 유사하게 작용하는 태그들은 기본 포맷이 적용되어 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FLEX - &lt;a href=&quot;https://flexboxfroggy.com/#ko&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://flexboxfroggy.com/#ko&lt;/a&gt; 플렉스 배우기 게임&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[바름이는 어쩌다가 개발자가 되기로 했을까? ]]></title><description><![CDATA[코딩 부트캠프... 어떡하다가??]]></description><link>https://rumbarum.github.io//posts/WebDevStart/</link><guid isPermaLink="false">https://rumbarum.github.io//posts/WebDevStart/</guid><pubDate>Thu, 01 Aug 2019 01:23:45 GMT</pubDate><content:encoded>&lt;!-- 
![ㅇㅇㅇ](/media/rumbarum.png) --&gt;
&lt;h2 id=&quot;첫-헛발질&quot;&gt;&lt;a href=&quot;#%EC%B2%AB-%ED%97%9B%EB%B0%9C%EC%A7%88&quot; aria-label=&quot;첫 헛발질 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;첫 헛발질&lt;/h2&gt;
&lt;p&gt;내 생에 개발자를 한번 해볼까 제일 먼저  생각을 했던 때는 2009년이다. 당시 모토로라의 첫 안드로이드 폰(Droid )의 국내 출시와 연이은 아이폰의 3gs 출시로 모바일 앱 시장이 불타올랐다. 단순한 포켓볼게임 출시로 몇십만 달러를 버는 개발자가 나오고, 초등학생의 낱말퍼즐 앱이 100만 달러 넘게 벌여들인다는 기사가 나왔다. 그래서 나도 아이디어를 내어 뭔가 만들면 돈 좀 벌어 볼 수 있을까 싶었다. 그러나 무엇을, 어떻게, 어디서 배워야 할지 몰라 마음만 앞섰다. 그 마음은 금방 흐지부지 되고 말았다. 그 뒤로는 내 길이 아닌 가보다 하고 손 놓고 멀어졌다. &lt;/p&gt;
&lt;h2 id=&quot;두번째로-헛발질&quot;&gt;&lt;a href=&quot;#%EB%91%90%EB%B2%88%EC%A7%B8%EB%A1%9C-%ED%97%9B%EB%B0%9C%EC%A7%88&quot; aria-label=&quot;두번째로 헛발질 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;두번째로 헛발질?&lt;/h2&gt;
&lt;p&gt;시간이 흐르고 흘러 나는 O2O(online to offline)서비스를 제공하는 스타트업에 취업을 했다. IT 부서는 당연히 아니고 운영쪽 인력으로 투입되었다. 실물을 취급해서 온라인으로 파는 회사였는데 실물 장사는 많이 어렵다는 것을 배웠다. 그 회사 다음 다음 으로 새 일을 구하고 있을때 대표가 software 엔지니어를 추천했다. 내가 가끔씩 틀리는 사람인데 개발은 틀리면 기계가 틀리는 걸 잡아준다고 했다. 그리고 C.S.( Computer Science) 쪽은 계속해서 성장하는 시장이라고도 했다. 다른 스타트업들 일자리를 알아봤는데 운영은 발전 방향이 안보였고, 디자인은 내 재능 밖의 일이고, 개발자가 적성에 맞지 않을까 싶었다. 찾아보니 단기간에 개발자로 전향하게 도와주는 교육 회사와 프로그램들이 많았다. &lt;/p&gt;
&lt;h2 id=&quot;개발질ing&quot;&gt;&lt;a href=&quot;#%EA%B0%9C%EB%B0%9C%EC%A7%88ing&quot; aria-label=&quot;개발질ing permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;개발질ing.&lt;/h2&gt;
&lt;p&gt;그 중에 위코드를 고른 이유는 어떡하다보니… 원래 가려고 생각하던 곳을 못가게 되면서 다른데를 알아보다가 대표님과 상담하고 괜찮다고 느꼈다. 개발뽐뿌가 퐉퐉퐉 그리고 나서 다음날 바로 등록하기로 결정. 코스 시작전에 사전 안내된 강의들을 들으면서 들어갈 준비 하고
7.29 wecode 3기 시작!
​&lt;/p&gt;
&lt;h2 id=&quot;그-끝에는&quot;&gt;&lt;a href=&quot;#%EA%B7%B8-%EB%81%9D%EC%97%90%EB%8A%94&quot; aria-label=&quot;그 끝에는 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;그 끝에는?&lt;/h2&gt;
&lt;p&gt;대학 다니면서, 졸업하고 내가 제일 아쉬웠던건 건축학과를 들어가보지 못한 거였다. 내가 갖고 있는 재능이 건축쪽 요구되는 재능(공간지각력)과 상통한다고 느꼈었기 때문이다. 그러면서도 나의 부족함 (꼼꼼하지 못함)이 실수들을 만들어 낼 것 같은 두려움에 용기를 내어 뛰어들지 못했다. 생각해보니 개발을 한다는 것도 건축과 비슷하겠다는 생각을 하게 되었다. 재료와 결과만 다르지, 과정은 동일하지 않을까. 유능한 Web Product Builder 가 되면 좋겠다.&lt;/p&gt;</content:encoded></item></channel></rss>