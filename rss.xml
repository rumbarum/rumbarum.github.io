<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[ 개발세발개발]]></title><description><![CDATA[개발자 성장일기]]></description><link>https://rumbarum.github.io/</link><generator>RSS for Node</generator><lastBuildDate>Wed, 14 Aug 2019 00:49:20 GMT</lastBuildDate><item><title><![CDATA[Python 한눈에 톺아보기]]></title><description><![CDATA[파이썬 복습을 하기위한 자료]]></description><link>https://rumbarum.github.io//posts/onpagrPython /</link><guid isPermaLink="false">https://rumbarum.github.io//posts/onpagrPython /</guid><pubDate>Sun, 04 Aug 2019 01:23:45 GMT</pubDate><content:encoded>&lt;h1 id=&quot;python-뽀개기&quot;&gt;&lt;a href=&quot;#python-%EB%BD%80%EA%B0%9C%EA%B8%B0&quot; aria-label=&quot;python 뽀개기 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Python 뽀개기&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Print - 프린트다음에 오는 글자들을 출력&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;print( “Hello World!“)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&quot;data-type&quot;&gt;&lt;a href=&quot;#data-type&quot; aria-label=&quot;data type permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Type&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Integer - 정수&lt;/li&gt;
&lt;li&gt;Float - 소수점이 들어간 숫자&lt;/li&gt;
&lt;li&gt;Complex Num - 실수+ 허수 복소수&lt;/li&gt;
&lt;li&gt;String 문자&lt;/li&gt;
&lt;li&gt;Boolean 조건문 평가값 T/F&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&quot;variable&quot;&gt;&lt;a href=&quot;#variable&quot; aria-label=&quot;variable permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Variable&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;변수 지정 하고 변수 수정 자유로움&lt;/li&gt;
&lt;li&gt;변수이름 = 변수값&lt;/li&gt;
&lt;li&gt;변수 이름 법칙&lt;/li&gt;
&lt;li&gt;변수 이름은 영어 알파벳과 숫자 그리고 underscore (_) 으로만 구성될 수 있습니다.&lt;/li&gt;
&lt;li&gt;변수 이름 첫글자는 알파벳이나 underscore로만 시작해야 합니다. 숫자로는 시작될 수 없습니다.&lt;/li&gt;
&lt;li&gt;영어 알파벳은 대문자와 소문자가 구분이 됩니다 (case sensitive).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&quot;string&quot;&gt;&lt;a href=&quot;#string&quot; aria-label=&quot;string permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;String&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;fomatting&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;%-formatting - 코드 가독성이 떨어짐&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Eric&quot;&lt;/span&gt; age &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;74&lt;/span&gt;
&lt;span class=&quot;token string&quot;&gt;&quot;Hello, %s.You are %s.&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; age&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;token string&quot;&gt;&apos;Hello Eric. You are 74.&apos;&lt;/span&gt;`&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;str.format() - 인수가 많아질 경우 복잡해지기 마찬가지&lt;/p&gt;
&lt;p&gt;`&gt;&gt;&gt; person = {‘name’: ‘Eric’, ‘age’: 74}&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Hello, {name}. You are {age}.&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;**&lt;/span&gt;person&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;token string&quot;&gt;&apos;Hello, Eric. You are 74.&apos;&lt;/span&gt;`&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;f-String &lt;a href=&quot;https://realpython.com/python-f-strings/#arbitrary-expressions&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://realpython.com/python-f-strings/#arbitrary-expressions&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Eric&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; age &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;74&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; f&quot;Hello&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt; You are &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;age&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;
&quot;&lt;span class=&quot;token string&quot;&gt;&apos;Hello, Eric. You are 74.&apos;&lt;/span&gt;`&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;단순, 응용력 좋음, 멀티라인,&lt;/li&gt;
&lt;li&gt;Quotation Mark 1, 2, 3개의 ” “이 앞뒤로 붙어도 된다.&lt;/li&gt;
&lt;li&gt;Dictionaries 데이터도 텍스트에 삽입&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Note - 딕셔너리 데이터 키 이름이 텍스트 인용 부호와 같으면 오류&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;comedian &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;name&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Eric Idle&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;age&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;74&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; 
&lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&apos;The comedian is {comedian[&apos;&lt;/span&gt;&lt;/span&gt;name&lt;span class=&quot;token string&quot;&gt;&apos;]}, aged {comedian[&apos;&lt;/span&gt;age&lt;span class=&quot;token string&quot;&gt;&apos;]}. &apos;&lt;/span&gt; File &lt;span class=&quot;token string&quot;&gt;&quot;&amp;lt;stdin&gt;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; line &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&apos;The comedian is {comedian[&apos;&lt;/span&gt;&lt;/span&gt;name&lt;span class=&quot;token string&quot;&gt;&apos;]}, aged {comedian[&apos;&lt;/span&gt;age&lt;span class=&quot;token string&quot;&gt;&apos;]}.&apos;&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;^&lt;/span&gt;SyntaxError&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; invalid syntax` 참이 되려면 아래처럼 
&lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&quot;The comedian is &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;comedian&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;name&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;, aged &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;comedian&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;age&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;.&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;The comedian is {comedian[&quot;name&quot;]}, aged {comedian[&quot;age&quot;]}.&apos;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;Braces 다중 괄호 가능하다&lt;/li&gt;
&lt;li&gt;앞뒤각각 3개이상일 경우에 앞뒤로 2개 가능 &lt;code class=&quot;language-text&quot;&gt;&amp;gt;&amp;gt;&amp;gt; f&amp;quot;{{74}}&amp;quot;&amp;#39;{74}&amp;#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;f string expression 부분에 ” 삽입은 불가능하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;문자연결&lt;/li&gt;
&lt;li&gt;print(“Hello, ” + “World”)&lt;/li&gt;
&lt;li&gt;name = input() print(f”Hello, {name}“)&lt;/li&gt;
&lt;li&gt;multiple line 표현에는 앞뒤로 “*3 을 붙인다&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&quot;number&quot;&gt;&lt;a href=&quot;#number&quot; aria-label=&quot;number permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Number&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;따옴표 들어가면 안됨. “100” ≠ 100&lt;/li&gt;
&lt;li&gt;문자열과 숫자열의 계산 안됨&lt;/li&gt;
&lt;li&gt;수학연산&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;가감승제&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;정수나누기 정수값으로 떨어지게 반내림을 한다.&lt;code class=&quot;language-text&quot;&gt;7 // 3 = 2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;% : 나누고 나머지 값 표현&lt;/li&gt;
&lt;li&gt;+= 3: 변수에 값을 더하고 변수로 지정&lt;/li&gt;
&lt;li&gt;-= 3: 변수에서 값을 뺌 값을 지정&lt;/li&gt;
&lt;li&gt;*= : 변수에 값을 곱한값을 변수로 지정&lt;/li&gt;
&lt;li&gt;/= : 변수를 값으로 나눈 결과를 변수로 지정&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;사칙연산 우선순위!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;( )&lt;/li&gt;
&lt;li&gt;** 제곱!&lt;/li&gt;
&lt;li&gt;*, / , 그리고 %&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;와 -&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&quot;white-space--indention&quot;&gt;&lt;a href=&quot;#white-space--indention&quot; aria-label=&quot;white space  indention permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;white space = indention!!&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;js는 괄호로 종속성을 표현하지만 python은 들여쓰기로 종속성을 보여준다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&quot;if-statement&quot;&gt;&lt;a href=&quot;#if-statement&quot; aria-label=&quot;if statement permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;If statement&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;if expression: 
  codes to execute
if 2 + 2 == 4: 
  print(f&amp;quot;산수는 어렵지 않아요!&amp;quot;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;elif and Else&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;elif = else if&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;if 구문과 연결되어 사용, if 다음에 사용이 가능하다.&lt;/li&gt;
&lt;li&gt;if 가 false 일 경우 실행 true 면 if 에서 끝남&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;else&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;if 나 , else if 가 false 일 경우 실행, 별도의 조건이 필요없음&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Testing condition&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;and : 여러 조건문 연결&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;모든 조건문이 true 여야 한다. 하나라도 false 가 있으면 실행이 안됨&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;and 의 반대, 테스트 조건중 하나라도 true 이면 코드가 실행이 됨&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Nested If Statements&lt;/li&gt;
&lt;li&gt;반복되는 컨디션이 있을때는 nested if statemens 즉 중첩되는 if 구문을 사용&lt;/li&gt;
&lt;li&gt;(간격)으로 구분&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2단계 이상 중첩을 하면 가독성이 너무 떨어지기 때문에 일반적으로 2단계 이상은 잘 하지 않는다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;if status == &amp;quot;학생&amp;quot;:	
  if year &amp;gt;= 3:	
		print(&amp;quot;취업이 곧 다가온다&amp;quot;)	
  elif year == 2:	
		print(&amp;quot;그래도 아직 놀 시간이 있네..&amp;quot;)	
  elif year &amp;lt; 2:	
		print(&amp;quot;한창 놀때지..&amp;quot;)	
  else:	
    print(&amp;quot;열심히 공부 해서 대학교 부터 가라!&amp;quot;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&quot;비교-연산자&quot;&gt;&lt;a href=&quot;#%EB%B9%84%EA%B5%90-%EC%97%B0%EC%82%B0%EC%9E%90&quot; aria-label=&quot;비교 연산자 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;비교 연산자&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;== : 같다&lt;/li&gt;
&lt;li&gt;!= : 다르다&lt;/li&gt;
&lt;li&gt;”&gt;”: 크다 *string 도 &gt; 으로 비교가능하다 .&lt;/li&gt;
&lt;li&gt;&amp;#x3C; : 작다&lt;/li&gt;
&lt;li&gt;”&gt;=” : 크거나 같다.&lt;/li&gt;
&lt;li&gt;&amp;#x3C;= : 작거나 같다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&quot;comment&quot;&gt;&lt;a href=&quot;#comment&quot; aria-label=&quot;comment permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Comment&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;#으로 시작한다&lt;/li&gt;
&lt;li&gt;멀티라인삽입`&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&apos;&apos;&apos;This is a multiline comments. 이렇게 여러 줄에 걸쳐서 주석을 삽입하는게 가능합니다…&apos;&apos;&apos;`&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;best practice는 주석은 최소한으로 사용하는 것&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&quot;function&quot;&gt;&lt;a href=&quot;#function&quot; aria-label=&quot;function permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Function&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;반복코드의 효과적 사용&lt;/li&gt;
&lt;li&gt;코드의 가독성 향상&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;def 함수명(parameter): 문장1 문장2 … 문장N [return 리턴값]&lt;/p&gt;
&lt;p&gt;parameter 와 return 은 optional&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&quot;parameter&quot;&gt;&lt;a href=&quot;#parameter&quot; aria-label=&quot;parameter permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;parameter&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;positional arguments&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;순서대로 값이 parameter로 함수에 전해지는 경우&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;keyword arguments&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;순서 대신에 parameter 이름으로 맞추어서 값을 전해준다.&lt;/li&gt;
&lt;li&gt;가독성 향상&lt;/li&gt;
&lt;li&gt;실수 가능성 줄임&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mixing positional arguments and keyword arguments 두개를 섞는 것도 가능함&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;keyword arguments 는 순서가 바뀌어도 상관 없지만 positional arguments 부분은 순서를 지켜줘야 한다&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Parameter Default Value&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Default 값이 정의된 paramter는 함수가 호출될때 값이 넘겨지 않아도 괜찮다.&lt;/li&gt;
&lt;li&gt;값이 넘겨지 않은 경우 default 값이 자동으로 넘겨지게 된다.&lt;/li&gt;
&lt;li&gt;&lt;u&gt;default 값이 정의된 parameter가 default 값이 정의 되지 않은 parameter 보다 먼저 위치해 있으면 안됨 syntax 에러 표현&lt;/u&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&quot;list&quot;&gt;&lt;a href=&quot;#list&quot; aria-label=&quot;list permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;List&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;string, number, boolean 등 모든 타입의 값을 저장할 수 있다.&lt;/li&gt;
&lt;li&gt;samlple&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;korea_provinces = [“강원도”, “경기도”, “경상도”, “전라도”, “충청도”]&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;구성&lt;/li&gt;
&lt;li&gt;variable 변수명&lt;/li&gt;
&lt;li&gt;Element 구성 요소&lt;/li&gt;
&lt;li&gt;index&lt;/li&gt;
&lt;li&gt;인덱스는 0부터 시작&lt;/li&gt;
&lt;li&gt;index의 마지막은 n-1 (n은 list의 총 길이)&lt;/li&gt;
&lt;li&gt;소환은 ListName[index]&lt;/li&gt;
&lt;li&gt;Adding And Changing Elements To List&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Append :한개의 엘리먼트&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;list name&gt; &lt;dot&gt; &lt;append&gt; (element)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;: 한개 이상의 엘리먼트 추가&lt;/li&gt;
&lt;li&gt;list1 = list1 + list2&lt;/li&gt;
&lt;li&gt;새로 생성된 list를 변수에 다시 지정해 주지 않으면 기존 list들은 수정이 되지 않은 상태로 남아있게 된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;insert&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;원하는 위치에 element를 삽입&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;cities = [ “서울특별시”, “부산광역시”, “인천광역시”, “대구광역시”, “대전광역시” ] cities.insert(1, “제주특별자치도 제주시”) &amp;#x3C;= 부산광역시 자리( cities[1]) 에 채워넣음, 나머지 뒤로 한칸씩 밀린다.&lt;/p&gt;
&lt;p&gt;cities = [ “서울특별시”,“제주특별자치도 제주시”, “부산광역시”, “인천광역시”, “대구광역시”, “대전광역시” ]&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Empty List&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;비어있는 대괄호( )로 생성&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Updating Elements&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;수정하고자 하는 element의 index 값을 통해 list에서 element를 선택한 후 새로운 값을 지정&lt;code class=&quot;language-text&quot;&gt;cities = [ &amp;quot;서울특별시&amp;quot;, &amp;quot;부산광역시&amp;quot;, &amp;quot;인천광역시&amp;quot;, &amp;quot;대구광역시&amp;quot;, &amp;quot;대전광역시&amp;quot;,]cities[2] = &amp;quot;경기도 성남시&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;List Slicing&lt;/li&gt;
&lt;li&gt;리스트의 일부분을 따로 copy&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;slicing은 오리지널 list를 수정하는게 아니라, 새로운 list를 만들어 낸다&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;sample&lt;code class=&quot;language-text&quot;&gt;list_name[start : stop]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;start와 stop에는 정수만 들어가야 한다! 2.0 도 안됨!!&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Slicing Steps&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;list_name[start : stop : step]&lt;/li&gt;
&lt;li&gt;optional&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Slicing Tip&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;start index를 빈칸으로 남겨두면 해당 list의 첫 요소 부터 시작&lt;/li&gt;
&lt;li&gt;stop index를 빈칸으로 남겨두면 start index 부터 끝까지 가져옴&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Deleting Elements From List&lt;/li&gt;
&lt;li&gt;del ListName[indexNumber]&lt;/li&gt;
&lt;li&gt;Listname.remove(Element)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&quot;tuples&quot;&gt;&lt;a href=&quot;#tuples&quot; aria-label=&quot;tuples permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tuples&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;List는 수정이 가능하지만 tuple은 한번 선언되면 수정이 불가능&lt;/li&gt;
&lt;li&gt;[…] =&gt; list , (…) =&gt; tuples&lt;/li&gt;
&lt;li&gt;2개에서 5개 사이의 요소들을 저장할때 사용&lt;/li&gt;
&lt;li&gt;특정 데이터를 ad hoc(즉석적으로) 하게 표현하고 싶을때 사용&lt;/li&gt;
&lt;li&gt;List의 요소들로 tuple을 사용&lt;code class=&quot;language-text&quot;&gt;cords = [ (4,4), (5,2), (-2, 2), (-3, -4) ]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;인덱스 할당으로 데이터 입력이 불가능하다.&lt;code class=&quot;language-text&quot;&gt;tuple= (value,...) (가능)``tuple[n] = value (불가능)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&quot;set&quot;&gt;&lt;a href=&quot;#set&quot; aria-label=&quot;set permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Set&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;list의 친척&lt;/li&gt;
&lt;li&gt;ordering이 없다.&lt;/li&gt;
&lt;li&gt;순서가 없으므로 indexing도 없다.&lt;/li&gt;
&lt;li&gt;중복값이 존재하지 않는다. 중복값 입력시 새로운 요소가 이전 요소 대신함&lt;/li&gt;
&lt;li&gt;Set 생성하는 법&lt;/li&gt;
&lt;li&gt;중괄호 ({ }) 사용 &lt;code class=&quot;language-text&quot;&gt;set1 = {1, 2, 3}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;set() 함수&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;set2 = set([1, 2, 3])&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;set를 만들기 위해서는 list를 parameter로 전달&lt;/li&gt;
&lt;li&gt;set() 함수를 사용해서 set를 만드는 경우는 list를 set로 변환하고 싶을 때&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Set에서 새로운 요소 추가&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;my_set &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; my_set&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;add&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;my_set&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Set에서 요소 삭제&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;my_set &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; my_set&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;remove&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;my_set&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Look Up : value 존재여부 알아보기&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;my_set &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; 
&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; my_set&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 
  &lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;1 is in the set&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; the &lt;span class=&quot;token builtin&quot;&gt;set&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; my_set&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 
  &lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;4 is not in the set&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; the &lt;span class=&quot;token builtin&quot;&gt;set&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Intersection (교집합) &amp;#x26; Union (합집합)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;교집합은 &amp;#x26; 키워드 혹은 intersection&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;set1 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; 
set2 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;set1 &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt; set2&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;set1&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;intersection&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;set2&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;합집합은 | 키워드 혹은 union 함수&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;set1 &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; set2&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;set1&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;union&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;set2&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&quot;dictionary&quot;&gt;&lt;a href=&quot;#dictionary&quot; aria-label=&quot;dictionary permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dictionary&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;object 는 키에 스트링 표현을 안붙여도 입력이 가능했는데 Dictionary는 그러지가 않는다.&lt;/li&gt;
&lt;li&gt;sample&lt;code class=&quot;language-text&quot;&gt;my_dic = { &amp;quot;key1&amp;quot; : &amp;quot;value1&amp;quot;, &amp;quot;key2&amp;quot; : &amp;quot;value2&amp;quot;}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Dictionary에서 요소(element) 읽어들이기&lt;/li&gt;
&lt;li&gt;DictionaryName[“key Name”]&lt;/li&gt;
&lt;li&gt;Elements add&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;DictionaryName[New_Key]=new_value&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;동일한 key가 이미 존재할 경우 새로운 값이 대체한다&lt;/li&gt;
&lt;li&gt;Elements fix&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;DictionaryName[Key] = fixed Element.&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Elements remove&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;del DictionaryName[Key]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Looping&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;for each_key in DictionaryID&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;딕셔너리의 키값들을 리턴&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;for each_key in DictionaryID.values()&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;밸류값들을 리턴&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Looping Dictionary With Both Keys And Values&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;for each_key, each value in DictionaryID.items()&lt;/li&gt;
&lt;li&gt;Dictionary의 items 함수는 key와 value를 tuple로 리턴&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Complex Dictionary&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;List of Dictionaries&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;손쉽게 여러 dictionary들을 grouping&lt;/li&gt;
&lt;li&gt;특정 dictionary 접근시 코드와 실행 시간이 길어진다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nested Dictionary&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;원하는 데이터의 키값으로 바로 찾을 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&quot;for-loops&quot;&gt;&lt;a href=&quot;#for-loops&quot; aria-label=&quot;for loops permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;For Loops&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;-&lt;code class=&quot;language-text&quot;&gt;for element in list: do_something_with_element&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;For 문은 tuple, set 등에서도 사용이 가능하다.&lt;/li&gt;
&lt;li&gt;Break&lt;/li&gt;
&lt;li&gt;다음 interation으로 넘어가지 않고 for 구문에서 빠져나옴&lt;/li&gt;
&lt;li&gt;Continue&lt;/li&gt;
&lt;li&gt;for 문 안의 추가된 코드 실행안시키고 interation으로 넘어가고 싶을때는 continue&lt;/li&gt;
&lt;li&gt;Nested For Loops&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;  numbers1 = [1, 2, 3, 4, 5]
  numbers2 = [10, 20, 30, 40, 50]
  for num1 in numbers1: 
    for num2 in numbers2: 
    print(f&amp;quot;{num1} * {num2} == {num1 * num2}&amp;quot;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&quot;while-loops&quot;&gt;&lt;a href=&quot;#while-loops&quot; aria-label=&quot;while loops permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;While Loops&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;특정 조건문이 True 일 경우에만 코드블록을 반복 실행&lt;/li&gt;
&lt;li&gt;-&lt;code class=&quot;language-text&quot;&gt;while &amp;lt;조건문&amp;gt;: &amp;lt;수행할 문장1&amp;gt; &amp;lt;수행할 문장2&amp;gt; &amp;lt;수행할 문장3&amp;gt; ... &amp;lt;수행할 문장N&amp;gt; number = 0while number &amp;lt;= 10: print(number) number += 1&amp;gt; 0...10&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Break &amp;#x26; Continue&lt;/li&gt;
&lt;li&gt;For문과 동일하게 break는 while문을 강제종료&lt;/li&gt;
&lt;li&gt;continue는 다음 iteration으로 넘어갑니다.&lt;/li&gt;
&lt;li&gt;-&lt;code class=&quot;language-text&quot;&gt;number = 0while number &amp;lt;= 10: if number == 9: break elif number &amp;lt;= 5: number += 1 continue else: print(number) number += 1&amp;gt; 678&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;While Else&lt;/li&gt;
&lt;li&gt;while의 조건문이 False 이면 실행&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;while &amp;lt;조건문&amp;gt;: &amp;lt;수행할 문장1&amp;gt; &amp;lt;수행할 문장2&amp;gt; &amp;lt;수행할 문장3&amp;gt; ... &amp;lt;수행할 문장N&amp;gt; else: &amp;lt;while문이 종료된 후 수행할 문장1&amp;gt; &amp;lt;while문이 종료된 후 수행할 문장2&amp;gt; &amp;lt;while문이 종료된 후 수행할 문장3&amp;gt; ... &amp;lt;while문이 종료된 후 수행할 문장N&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[ RGB 값으로 내가 원하는 색상을 만들 수 있을까?]]></title><description><![CDATA[바름은(는) css 색상을 지정하다가 색상을 혼자서 만들어 볼 수 있겠다는 생각이 떠올랐다.  어떻게?]]></description><link>https://rumbarum.github.io//posts/understandRGBcolor /</link><guid isPermaLink="false">https://rumbarum.github.io//posts/understandRGBcolor /</guid><pubDate>Fri, 02 Aug 2019 01:23:45 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://m.blog.naver.com/PostView.nhn?blogId=midesse&amp;#x26;logNo=220343601395&amp;#x26;proxyReferer=https%3A%2F%2Fwww.google.com%2F&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://m.blog.naver.com/PostView.nhn?blogId=midesse&amp;#x26;logNo=220343601395&amp;#x26;proxyReferer=https%3A%2F%2Fwww.google.com%2F&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;▲ rgb 컬러에 대한 자세한 설명  &lt;/p&gt;
&lt;h2 id=&quot;rgb-숫자로-색깔-만들기&quot;&gt;&lt;a href=&quot;#rgb-%EC%88%AB%EC%9E%90%EB%A1%9C-%EC%83%89%EA%B9%94-%EB%A7%8C%EB%93%A4%EA%B8%B0&quot; aria-label=&quot;rgb 숫자로 색깔 만들기 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;rgb 숫자로 색깔 만들기&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;rgb  =&gt; Red , Green , Blue 빛의 3원색을 가리킨다. &lt;/li&gt;
&lt;li&gt;빛은 더할 수록 밝아진다. &lt;/li&gt;
&lt;li&gt;에디터에서 rgb 컬러를 표현할때 rgb(n, m, k) 로 표현한다. n, m, k 의 값은 0~ 255 &lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다른 방식으로 #000000으로 표현도 가능하다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;각 자리마다 0~9+ a~f 로 표현되는 16자리 숫자가 들어간다. 각각의 2자리가 Red, Green,Blue &lt;/li&gt;
&lt;li&gt;hex-html 코드라고도 부른다.  &lt;/li&gt;
&lt;li&gt;검정색 #000000, 흰색 #ffffff  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;0은 빛이 없고, 255는 각각의 빛이 최고라고 보면 된다. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;검정색 rgb (0 ,0 ,0 ),  흰색 rgb (255,255,255) , &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;혼합사례&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;노랑 rgb(255,255,0) #ffff00&lt;/li&gt;
&lt;li&gt;보라 rgb( 120,0,120) #800080&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Flex 알아보기  ]]></title><description><![CDATA[CSS display 요소인 플렉스 정리 ]]></description><link>https://rumbarum.github.io//posts/understandFlexElement /</link><guid isPermaLink="false">https://rumbarum.github.io//posts/understandFlexElement /</guid><pubDate>Thu, 01 Aug 2019 01:23:45 GMT</pubDate><content:encoded>&lt;h2 id=&quot;flex--html-문서내-엘리먼트들의-배열을-도와준다&quot;&gt;&lt;a href=&quot;#flex--html-%EB%AC%B8%EC%84%9C%EB%82%B4-%EC%97%98%EB%A6%AC%EB%A8%BC%ED%8A%B8%EB%93%A4%EC%9D%98-%EB%B0%B0%EC%97%B4%EC%9D%84-%EB%8F%84%EC%99%80%EC%A4%80%EB%8B%A4&quot; aria-label=&quot;flex  html 문서내 엘리먼트들의 배열을 도와준다 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Flex = Html 문서내 엘리먼트들의 배열을 도와준다.&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://flexboxfroggy.com/#koFlex&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://flexboxfroggy.com/#koFlex&lt;/a&gt; 좀더 이해하기 쉽게 만들어주는 게임.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;동일레벨의 엘리먼트들을 클래스 셀렉터를 사용해 css 로 display : flex; 를 설정 후 다음의 속성들을 부여한다. &lt;/li&gt;
&lt;li&gt;
&lt;p&gt;justify-content =&gt; 엘레멘트 그룹 가로배열&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flex-start: 요소들을 컨테이너의 왼쪽으로 정렬합니다.&lt;/li&gt;
&lt;li&gt;flex-end: 요소들을 컨테이너의 오른쪽으로 정렬합니다.&lt;/li&gt;
&lt;li&gt;center: 요소들을 컨테이너의 가운데로 정렬합니다.&lt;/li&gt;
&lt;li&gt;space-between: 요소들 사이에 동일한 간격을 둡니다.&lt;/li&gt;
&lt;li&gt;space-around: 요소들 주위에 동일한 간격을 둡니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;align-items =&gt;엘레멘트 그룹 세로배열&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flex-start: 요소들을 컨테이너의 꼭대기로 정렬합니다.&lt;/li&gt;
&lt;li&gt;flex-end: 요소들을 컨테이너의 바닥으로 정렬합니다.&lt;/li&gt;
&lt;li&gt;center: 요소들을 컨테이너의 세로선 상의 가운데로 정렬합니다.&lt;/li&gt;
&lt;li&gt;baseline: 요소들을 컨테이너의 시작 위치에 정렬합니다.&lt;/li&gt;
&lt;li&gt;stretch: 요소들을 컨테이너에 맞도록 늘립니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Flex-direction - 엘레멘트 그룹내 배열 방법 및 순서&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;row: 요소들을 텍스트의 방향과 동일하게 정렬합니다.&lt;/li&gt;
&lt;li&gt;row-reverse: 요소들을 텍스트의 반대 방향으로 정렬합니다.&lt;/li&gt;
&lt;li&gt;column: 요소들을 위에서 아래로 정렬합니다.&lt;/li&gt;
&lt;li&gt;column-reverse: 요소들을 아래에서 위로 정렬합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;order 엘레멘트 그룹내 순서 개별조정&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;속성을 각 요소에 적용할 수 있습니다. order의 기본 값은 0이며, 양수나 음수로 바꿀 수 있습니다.&lt;/li&gt;
&lt;li&gt;0 자기 포지션,&lt;/li&gt;
&lt;li&gt;++ 오른쪽, 아래쪽,&lt;/li&gt;
&lt;li&gt;— 왼쪽, 위쪽&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;align-self&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;align-item 개별 적용&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;flex-wrap 엘레멘트 그룹내 줄 맞춤&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nowrap: 모든 요소들을 한 줄에 정렬합니다.&lt;/li&gt;
&lt;li&gt;wrap: 요소들을 여러 줄에 걸쳐 정렬합니다.&lt;/li&gt;
&lt;li&gt;wrap-reverse: 요소들을 여러 줄에 걸쳐 반대로 정렬합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;flex-flow&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flex-direction과 flex-wrap 합체&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;align-content 엘레멘트 그룹내 ( 여러줄로( flex-wrap: wrap) )&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flex-start: 여러 줄들을 컨테이너의 꼭대기에 정렬합니다.&lt;/li&gt;
&lt;li&gt;flex-end: 여러 줄들을 컨테이너의 바닥에 정렬합니다.&lt;/li&gt;
&lt;li&gt;center: 여러 줄들을 세로선 상의 가운데에 정렬합니다.&lt;/li&gt;
&lt;li&gt;space-between: 여러 줄들 사이에 동일한 간격을 둡니다.&lt;/li&gt;
&lt;li&gt;space-around: 여러 줄들 주위에 동일한 간격을 둡니다.&lt;/li&gt;
&lt;li&gt;stretch: 여러 줄들을 컨테이너에 맞도록 늘립니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Html셀렉터, CSS 한눈에 훑어보기   ]]></title><description><![CDATA[Html엘리먼트 셀렉터에 대한 간단한 설명과 Html에 따라다니는 CSS를 키워드 계층도로 정리했습니다.  ]]></description><link>https://rumbarum.github.io//posts/Onepage_HtmlAndCss/</link><guid isPermaLink="false">https://rumbarum.github.io//posts/Onepage_HtmlAndCss/</guid><pubDate>Mon, 29 Jul 2019 02:23:45 GMT</pubDate><content:encoded>&lt;h1 id=&quot;html&quot;&gt;&lt;a href=&quot;#html&quot; aria-label=&quot;html permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Html&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;HyperTextMarkupLanguage : 웹에 표현되는 정보들을 태그라는 표시를 통해 구분해서 보여지도록 하는 언어문법이다. 왜? 구분이 안되면, 정렬이 안되고 제대로 보기가 어렵다.  Html은 element로 구성되어 진다. 그리고 각각의 element 들은 아래 그림처럼 구성되어 있다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://mdn.mozillademos.org/files/7659/anatomy-of-an-html-element.png&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://flukeout.github.io/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://flukeout.github.io/&lt;/a&gt; 에서 게임으로 배워볼수 있으며  아래에 정리해 놓았다. &lt;/li&gt;
&lt;li&gt;셀렉터 : 구현된 element 들을 골라서 가지고 있는 정보의 수정,삭제등을 할 수 있다. 수많은 element들을 원하는대로 빨리 골라낼수 있도록 다양한 셀렉방식을 지원하다. &lt;/li&gt;
&lt;li&gt;&lt;img src=&quot;https://www.w3schools.com/js/pic_navigate.gif&quot;&gt;&lt;/li&gt;
&lt;li&gt;element들의 상관관계, 최상위에는 Root element 가 있으며 (&lt;html&gt;태그가 달린다.) 하위 element들을 child라고 한다. 같은 단계의 child 끼리는 sibling 이라고 불리며, 첫째부터 막내까지 작성한 순서대로 순서가 정해진다.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;셀렉터 적용 방법들 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A B  - A에 속한 B 엘리먼트&lt;/li&gt;
&lt;li&gt;A + B - A의 바로 다음 형제B&lt;/li&gt;
&lt;li&gt;*모든 엘리먼트&lt;/li&gt;
&lt;li&gt;A * -  A 에 속한 모든 엘리먼트&lt;/li&gt;
&lt;li&gt;A ~B  - A를 따르는 모든 B&lt;/li&gt;
&lt;li&gt;A &gt; B - A의 직속자녀인 B&lt;/li&gt;
&lt;li&gt;A:first-child : 첫번째 A 엘리먼트&lt;/li&gt;
&lt;li&gt;A:only-child 혼자있는 A 엘리먼트 선택&lt;/li&gt;
&lt;li&gt;A :last-child 마지막 A 엘리먼트 선택&lt;/li&gt;
&lt;li&gt;A :nth-child(m) :m번째 , A 엘리먼트 선택&lt;/li&gt;
&lt;li&gt;A :nth-last-child(m) : 뒤에서 m 번째 A엘리먼트 선택&lt;/li&gt;
&lt;li&gt;A :first-of-type -첫번째 A 엘리먼트&lt;/li&gt;
&lt;li&gt;A: nth-of-type(odd / even) - 홀/짝 A 엘리먼트&lt;/li&gt;
&lt;li&gt;A: nth-of-type( Xn+B) - B순서부터 매 X번째 엘리먼트, B 포함됨&lt;/li&gt;
&lt;li&gt;A:only-of-type A 종류의 엘리먼트만 선택&lt;/li&gt;
&lt;li&gt;A:last-of-type : 마지막 A 엘리먼트&lt;/li&gt;
&lt;li&gt;A:empty 비어있는 모든 A 엘리먼트&lt;/li&gt;
&lt;li&gt;A:not(X) - X가 포함되어 있지 않은 모든 A , X는 id, class, tag 복수조건 가능하다.&lt;/li&gt;
&lt;li&gt;[attribute] attribute가진 엘리먼트&lt;/li&gt;
&lt;li&gt;A[attribute] attribute를 가진 A&lt;/li&gt;
&lt;li&gt;[attribute=“value”] - attribute===value&lt;/li&gt;
&lt;li&gt;[attribute^=“value”] - attibute가 value로 시작&lt;/li&gt;
&lt;li&gt;[attribute$=“value”] - attibute가 value로 종료&lt;/li&gt;
&lt;li&gt;[attribute*=“value”] -attibute가 value를 포함하고 있음&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;css&quot;&gt;&lt;a href=&quot;#css&quot; aria-label=&quot;css permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CSS&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;http://www.nextree.co.kr/content/images/2016/09/yrkim-140327-selector-04.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&quot;css-적용하기&quot;&gt;&lt;a href=&quot;#css-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0&quot; aria-label=&quot;css 적용하기 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;css 적용하기&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&quot;css-셀렉터&quot;&gt;&lt;a href=&quot;#css-%EC%85%80%EB%A0%89%ED%84%B0&quot; aria-label=&quot;css 셀렉터 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;css 셀렉터&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;셀렉터 구분&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;클래스와 ID들은 대소문자를 구분하며 문자로 시작해야 하며 영어, 숫자와 언더바(_), 대쉬(-)를 포함할 수 있다.&lt;/li&gt;
&lt;li&gt;클래스는 어떠한 수의 요소에도 적용할 수 있다.&lt;/li&gt;
&lt;li&gt;ID는 하나의 요소에만 적용할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;셀렉터 적용 순서&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;inline styling &gt;&gt;&gt; &gt;id&gt;&gt;&gt;, class &gt; , tag&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3 id=&quot;상속과-그룹&quot;&gt;&lt;a href=&quot;#%EC%83%81%EC%86%8D%EA%B3%BC-%EA%B7%B8%EB%A3%B9&quot; aria-label=&quot;상속과 그룹 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;상속과 그룹&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;묶어서 적용하기, 골라서 적용하기,&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;- p.pp  - p태그 이면서 pp클래스
- p .pp - p태그 아래의  pp클래스
- p#pp - p태그 이면서 pp아이디
- p #pp- - p태그 이면서 pp아이디
- p p p .pp #pp- p태그의 p태그의 p태그의 pp클래스의 pp 아이디&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;태그 속성 셀렉팅’tag::attribute { }’&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;동작 셀렉팅&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;마우스 변경 button:hover {cursor : pointer }&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;선언 (declaration) - 속성과 속성값을 지정한다.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;폰트 조절 속성들&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;폰트의 적용&lt;/li&gt;
&lt;li&gt;family -폰트 종류&lt;/li&gt;
&lt;li&gt;size -크기&lt;/li&gt;
&lt;li&gt;weight 굵기 일반 400, bold 700&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;문구 스타일&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;가, 왼, 오 정렬 =&gt; text-align : center, left, right&lt;/li&gt;
&lt;li&gt;  스페이스 삽입&lt;/li&gt;
&lt;li&gt;”&lt;blockquote&gt;” 인용문 삽입 태그&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;마진, 보더, 패딩&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;보더 : 선굵기, 스타일(solid, dot, dash…), 색상&lt;/li&gt;
&lt;li&gt;보더의 길이가 각기 다르게 설정가능하다.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;박스사이징&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;element 영역을 보더로 통일&lt;/li&gt;
&lt;li&gt;{box-sizing: border-box;} &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;적용순서 - 위 오 아 왼 시계방향&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;margin, padding, border: 0px = 0px 0px 0px 0px&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;margin, padding, border: 0px 5 px = 0px 5px 0px 5px&lt;/li&gt;
&lt;li&gt;margin: ???px auto ; 로 좌우 같게 자동으로 할 수있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;웹페이지 이미지 삽입하기&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;img 태그 사용&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;css로도 삽입이 가능하다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;가로 화면 크기&lt;/li&gt;
&lt;li&gt;세로 div의 내용 만큼 사이즈&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;img 처럼 height,width 로 조정이 안될 수있다. 영역만 조정. 조정하려면 일치시켜야 한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;background-size : ~%&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;css- backgroundimage 와 img 의 차이&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;backgroundimage는 % 사이즈 조절이 가능함, 100보다 작으면 다중이미지, 크면 부분적이미지&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;레이아웃&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;block vs inline&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;p, div, li, table ==(display : inline-block)==&gt;인라인&lt;/li&gt;
&lt;li&gt;span, img, a =(float: left || right , display: block )=&gt; 블록&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;가운데 정렬 위아래패딩 auto&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;list&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;리스트 스타일 dot, number, none&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;table&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;테이블 구성요소&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;table, th (tr, td )&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;셀병합 ( 태그에 속성 삽입)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;가로 병합&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;colspan&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;세로병합&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;rowspan&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Input&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;type&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;text&lt;/li&gt;
&lt;li&gt;password&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;number&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;” - ” 삽입 불가&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;value 미리 설정해놓은값&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;place holder&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;셀렉트 ‘input::placeholder { }’&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;textarea input type=“text” 보다 긴 데이터 입력시 사용&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Position&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;relative 부모&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;absolute 자식 relative 부모가 없으면 작동이 안된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fixed&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;절대 고정, 위아래로 움직이거나 말거나 상관없음 (부모안에서)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;레이아웃.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;semantic element - 담고있는 콘텐츠를 예상 할 수 있게 해주는 태그들&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;경험이 재산이다 .&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;header, asider, nav, footer, section, article, figure&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;float&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;레이아웃 구조짤때 활용하기 좋음&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mediaquery&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;사용자 환경변화에 따라 동적인 변화가능&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;추가 템플릿과 유사하게 작용하는 태그들은 기본 포맷이 적용되어 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FLEX - &lt;a href=&quot;https://flexboxfroggy.com/#ko&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://flexboxfroggy.com/#ko&lt;/a&gt; 플렉스 배우기 게임&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[바름이는 어쩌다가 개발자가 되기로 했을까? ]]></title><description><![CDATA[코딩 부트캠프... 어떡하다가??]]></description><link>https://rumbarum.github.io//posts/WebDevStart/</link><guid isPermaLink="false">https://rumbarum.github.io//posts/WebDevStart/</guid><pubDate>Sun, 28 Jul 2019 01:23:45 GMT</pubDate><content:encoded>&lt;!-- 
![ㅇㅇㅇ](/media/rumbarum.png) --&gt;
&lt;h2 id=&quot;첫-헛발질&quot;&gt;&lt;a href=&quot;#%EC%B2%AB-%ED%97%9B%EB%B0%9C%EC%A7%88&quot; aria-label=&quot;첫 헛발질 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;첫 헛발질&lt;/h2&gt;
&lt;p&gt;내 생에 개발자를 한번 해볼까 제일 먼저  생각을 했던 때는 2009년이다. 당시 모토로라의 첫 안드로이드 폰(Droid )의 국내 출시와 연이은 아이폰의 3gs 출시로 모바일 앱 시장이 불타올랐다. 단순한 포켓볼게임 출시로 몇십만 달러를 버는 개발자가 나오고, 초등학생의 낱말퍼즐 앱이 100만 달러 넘게 벌여들인다는 기사가 나왔다. 그래서 나도 아이디어를 내어 뭔가 만들면 돈 좀 벌어 볼 수 있을까 싶었다. 그러나 무엇을, 어떻게, 어디서 배워야 할지 몰라 마음만 앞섰다. 그 마음은 금방 흐지부지 되고 말았다. 그 뒤로는 내 길이 아닌 가보다 하고 손 놓고 멀어졌다. &lt;/p&gt;
&lt;h2 id=&quot;두번째로-헛발질&quot;&gt;&lt;a href=&quot;#%EB%91%90%EB%B2%88%EC%A7%B8%EB%A1%9C-%ED%97%9B%EB%B0%9C%EC%A7%88&quot; aria-label=&quot;두번째로 헛발질 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;두번째로 헛발질?&lt;/h2&gt;
&lt;p&gt;시간이 흐르고 흘러 나는 O2O(online to offline)서비스를 제공하는 스타트업에 취업을 했다. IT 부서는 당연히 아니고 운영쪽 인력으로 투입되었다. 실물을 취급해서 온라인으로 파는 회사였는데 실물 장사는 많이 어렵다는 것을 배웠다. 그 회사 다음 다음 으로 새 일을 구하고 있을때 대표가 software 엔지니어를 추천했다. 내가 가끔씩 틀리는 사람인데 개발은 틀리면 기계가 틀리는 걸 잡아준다고 했다. 그리고 C.S.( Computer Science) 쪽은 계속해서 성장하는 시장이라고도 했다. 다른 스타트업들 일자리를 알아봤는데 운영은 발전 방향이 안보였고, 디자인은 내 재능 밖의 일이고, 개발자가 적성에 맞지 않을까 싶었다. 찾아보니 단기간에 개발자로 전향하게 도와주는 교육 회사와 프로그램들이 많았다. &lt;/p&gt;
&lt;h2 id=&quot;개발질ing&quot;&gt;&lt;a href=&quot;#%EA%B0%9C%EB%B0%9C%EC%A7%88ing&quot; aria-label=&quot;개발질ing permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;개발질ing.&lt;/h2&gt;
&lt;p&gt;그 중에 위코드를 고른 이유는 어떡하다보니… 원래 가려고 생각하던 곳을 못가게 되면서 다른데를 알아보다가 대표님과 상담하고 괜찮다고 느꼈다. 개발뽐뿌가 퐉퐉퐉 그리고 나서 다음날 바로 등록하기로 결정. 코스 시작전에 사전 안내된 강의들을 들으면서 들어갈 준비 하고
7.29 wecode 3기 시작!
​&lt;/p&gt;
&lt;h2 id=&quot;그-끝에는&quot;&gt;&lt;a href=&quot;#%EA%B7%B8-%EB%81%9D%EC%97%90%EB%8A%94&quot; aria-label=&quot;그 끝에는 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;그 끝에는?&lt;/h2&gt;
&lt;p&gt;대학 다니면서, 졸업하고 내가 제일 아쉬웠던건 건축학과를 들어가보지 못한 거였다. 내가 갖고 있는 재능이 건축쪽 요구되는 재능(공간지각력)과 상통한다고 느꼈었기 때문이다. 그러면서도 나의 부족함 (꼼꼼하지 못함)이 실수들을 만들어 낼 것 같은 두려움에 용기를 내어 뛰어들지 못했다. 생각해보니 개발을 한다는 것도 건축과 비슷하겠다는 생각을 하게 되었다. 재료와 결과만 다르지, 과정은 동일하지 않을까. 유능한 Web Product Builder 가 되면 좋겠다.&lt;/p&gt;</content:encoded></item></channel></rss>