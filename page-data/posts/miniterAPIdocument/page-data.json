{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/miniterAPIdocument/","webpackCompilationHash":"0cafc3c4cbab5381b6ff","result":{"data":{"markdownRemark":{"id":"05619ab5-89f9-5cd0-beb9-2c0463c2435a","html":"<h3 style=\"color:rgb(9, 136, 104)\"> 통신을 위한 규약입니다. 지키지 않으시면 에러가 날 확률이 100% </h3>\n<ul>\n<li>Wecode 트위터 클론 프로젝트 하시는 분들과 서버통신을 위해 만든 규약입니다!</li>\n<li>\n<p>전제</p>\n<ul>\n<li>post 데이터는 post data 양식을 지켜주세요</li>\n<li>response 데이터를 활용하여 적합한 유저 반응을 생성하시면 됩니다. </li>\n<li>백엔드는 데이터 유효성 검사 안합니다. 프론트에서 하고 주세요! </li>\n<li>서버에서는 데이터 유무와 중복만 확인합니다. </li>\n</ul>\n</li>\n<li>\n<p>응답 유형 </p>\n<ul>\n<li>사인업 url:   ~/signup/ </li>\n<li>\n<p>post data </p>\n<ul>\n<li>이름  user_name</li>\n<li>아이디  user_id</li>\n<li>패스워드 user_password</li>\n<li>프로필 user_profile</li>\n<li>csrf 값(document.cookie 치면 나오는 csrftoken) user_csrf </li>\n</ul>\n</li>\n<li>\n<p>post response</p>\n<ul>\n<li>정상출력</li>\n<li>회원가입 완료메시지 전송 {“message”:“Sign Up Success”}</li>\n<li>비정상출력</li>\n<li>이미 가입한 아이디가 있을경우 {“message”:“Id is Already Exist”}</li>\n</ul>\n</li>\n<li>로그인 url : ~/login/</li>\n<li>\n<p>로그인 </p>\n<ul>\n<li>Post data</li>\n<li>아이디 user_id</li>\n<li>패스워드 user_password</li>\n<li>post response</li>\n<li>\n<p>정상출력</p>\n<ul>\n<li>정상 로그인</li>\n</ul>\n<p> {“message”:“Login Success”}</p>\n</li>\n<li>\n<p>비정상출력</p>\n<ul>\n<li>아이디 없음</li>\n<li>{“message”:“Check Id”}</li>\n<li>비밀번호 오류</li>\n<li>{“message”:“Wrong Password”}</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>트윗페이지 이동후 트윗페이지 접속 유저 확인 ~/user_auth/</li>\n<li>\n<p>Post data</p>\n<ul>\n<li>csrftoken  user_csrf: </li>\n</ul>\n</li>\n<li>\n<p>post response</p>\n<ul>\n<li>정상출력</li>\n<li>{“data”:”{“user<em>id”: “아이디”, “user</em>name”: “이름”, “user_profile”: “프로파일” }”,  “message”:“User Info Loading Success”}</li>\n<li>비정상출력 - 없는 csrf 입력시</li>\n<li>{“message”: “Need Signup”} </li>\n</ul>\n</li>\n<li>트윗작성 ~/tweet/</li>\n<li>\n<p>Get </p>\n<ul>\n<li>정상출력</li>\n<li>\n<p>트윗 데이터 전체 </p>\n<ul>\n<li>유저 아이디 user_id : someid</li>\n<li>유저 작성내용 user_content: somecontent</li>\n<li>작성시간 created_at: time data</li>\n<li>트윗업데이트 시간updated_at: time data</li>\n</ul>\n</li>\n<li>{“message”:“Tweet Loading Success”}</li>\n</ul>\n</li>\n<li>\n<p>post </p>\n<ul>\n<li>글작성 </li>\n<li>\n<p>Post data </p>\n<ul>\n<li>아이디  user_id:</li>\n<li>콘텐츠 user_content:</li>\n</ul>\n</li>\n<li>\n<p>Post response </p>\n<ul>\n<li>트윗 입력시 </li>\n<li>\n<p>정상출력</p>\n<ul>\n<li>{“content<em>id”:“contents</em>number”,“message”:“Tweet Success”}</li>\n</ul>\n</li>\n<li>\n<p>비정상출력</p>\n<ul>\n<li>{“message”:“Tweet Failed”}</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>글 삭제 요청 ~/tweet_del/</li>\n<li>\n<p>Post data </p>\n<ul>\n<li>게시물아이디 content_id : </li>\n<li>유저아이디 user_id: </li>\n</ul>\n</li>\n<li>\n<p>Post response </p>\n<ul>\n<li>성공시</li>\n<li>{“message”:“Delete Success”}</li>\n<li>비정상 출력- 게시물 아이디와 유저 아이디 불일치시, 또는 이미 지운게시물 다시 삭제 요청</li>\n<li>{“message”: “No Authorization”}</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/posts/miniterAPIdocument/","tagSlugs":["/tag/django/","/tag/javascrip/","/tag/backend/","/tag/wecode/"]},"frontmatter":{"date":"2019-08-19T01:23:45.678Z","description":"바름이가 만든 django API와 통신하려는 프론트앤드분은 이 문서를 참조해주세요! ","tags":["Django","Javascrip","Backend","Wecode"],"title":"frontend를 위한 Django API 통신 문서 만들기 "}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/miniterAPIdocument/"}}}