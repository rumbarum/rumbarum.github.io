{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/TIL&TEL_2020-01-06/","webpackCompilationHash":"09cb7ce204a4d650aff3","result":{"data":{"markdownRemark":{"id":"53e617ed-f18a-5098-9a13-dfd6ebc36a82","html":"<h3 id=\"til-today-i-learned\"><a href=\"#til-today-i-learned\" aria-label=\"til today i learned permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TIL( Today I Learned)</h3>\n<ul>\n<li>\n<p><strong>19-12-30 월</strong></p>\n<ul>\n<li>채널별특징 세분화</li>\n<li>서로 다른 채널에서 고정되지 않은 데이터 처리 반영을 고민하였다.</li>\n<li>팀회의 </li>\n<li>회의를 통해서 가는 방향이 좀더 구체화 되었다. 나는 좀더 뒤의 것을 생각하고 있었다. 필요한 것은 앞부분이었다.</li>\n<li>20:20 위코드 백엔드 스터디</li>\n<li>\n<p>인터페이스 </p>\n<ul>\n<li>Java에서 사용하는건데, 공통적으로 가지게 되는 클래스의 공통부분 같은 느낌이었다. </li>\n</ul>\n</li>\n<li>프로토콜, 프로토콜 버퍼에 대해 들었다. 뭔지 다시 봐야겠다.</li>\n</ul>\n</li>\n<li>\n<p><strong>19-12-31 화</strong></p>\n<ul>\n<li>크롤링 대상을 어떻게 수집할것인가에 대해 고민해보기 </li>\n</ul>\n</li>\n<li>\n<p><strong>20-01-01 수</strong></p>\n<ul>\n<li>수집한 것 어떻게 저장할지 고민함</li>\n<li>\n<p>DB 저장</p>\n<ul>\n<li>RDB </li>\n</ul>\n</li>\n<li>\n<p>CSV 저장</p>\n<ul>\n<li>로딩 및 저장 매우 불편함</li>\n<li>계속적인 데이터의 처리 어려움</li>\n</ul>\n</li>\n<li>\n<p>pickle 저장</p>\n<ul>\n<li>계속해서 커지기 때문에(뉴스데이터가 계속 증가한다.) 파이썬이 감당 할수 없는 사이즈로 커질 수있다.</li>\n</ul>\n</li>\n<li>위 선택지중 단발성이라면 csv나, pickle이 될 수 있지만 계속해서 저장하고 불러온다면 결국은 DB다.   </li>\n</ul>\n</li>\n<li>\n<p><strong>20-01-02 목</strong></p>\n<ul>\n<li>DB에 어떻게 저장을 할까 고민함</li>\n<li>SQL alchemy ORM</li>\n<li>PyMySQL로  Query 문 작성하기</li>\n<li>flask - SQL alchemy ORM 사용하기</li>\n<li>Django 내 ORM 사용하기</li>\n<li>내가 할 크롤러가 웹서버 역할을 기대하지는 않으니, 웹서버 프레임웤은 배제, PyMySQL이나 SQL alchemy 둘 중 하나였는데 쿼리문 일일이 작성하는 것도 일이라 생각되어 배제 </li>\n<li>성능 이슈가 되는 부분이 있어서 PyMySQL도 사용하기는 해야한다고 한다</li>\n<li>위코드 4기 후배님들에게 취업선배로서 팁을 전수하는 시간을 가졌다. </li>\n</ul>\n</li>\n<li>\n<p><strong>20-01-03 금</strong></p>\n<ul>\n<li>MySQL로 DB 생성 오랜만에 해보고,</li>\n<li>SQL alchemy 작동 코드 쳐서 ORM 연결</li>\n<li>19:00 위코드 33기 송년회 </li>\n</ul>\n</li>\n<li>\n<p><strong>20-01-04 토</strong></p>\n<ul>\n<li>운동</li>\n<li>빔위키 다시 도전해보기 했는데 개인 wiki로 Dynalist를 잘 쓰고 있어서 필요성에 의문을…</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"tel-trial-and-error-log\"><a href=\"#tel-trial-and-error-log\" aria-label=\"tel trial and error log permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TEL (Trial and Error Log)</h3>\n<ul>\n<li>\n<p><strong>20.01.02</strong></p>\n<ul>\n<li>iterm 폰트 사이즈 조절 이상한데서 헤매다가 profile 에서 조절이 가능함을 알게되었다.</li>\n<li>그 전에는 Advanced에 들어가서 조절해야 하는 줄 알고 헤매다가 못찾았다. 거기서는 틀적인 부분을 조절하고, 비주얼 부분은 profiles에서 조절한다.</li>\n<li>Preferences > Profiles > Text > Font  사이즈 조절 </li>\n<li>print != return </li>\n<li>지난번에도 한번 헷갈렸는데 프린트는 나만 보는 부분이다. 프로그램이 인식하지 않는다.</li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/posts/TIL&TEL_2020-01-06/","tagSlugs":["/tag/til/","/tag/tel/","/tag/twc/"]},"frontmatter":{"date":"2020-01-06T01:23:45.678Z","description":"  19.12.30 ~ 20.01.05  배운것, 씨름한것들","tags":["TIL","TEL","TWC"],"title":"TIL&TEL 19.12.30 ~ 20.01.05"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/TIL&TEL_2020-01-06/"}}}