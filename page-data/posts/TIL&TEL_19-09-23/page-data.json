{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/TIL&TEL_19-09-23/","webpackCompilationHash":"8a7abcccb882cfaf6160","result":{"data":{"markdownRemark":{"id":"d04de754-b02f-5b2f-95bd-0c979cad3996","html":"<h3 id=\"til-today-i-learned\"><a href=\"#til-today-i-learned\" aria-label=\"til today i learned permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TIL( Today I Learned)</h3>\n<ul>\n<li>\n<p><strong>19.09.16</strong></p>\n<ul>\n<li>Query 복습 </li>\n<li>DB 설계 계속 수정 수정 수정 </li>\n</ul>\n</li>\n<li>\n<p><strong>19.09.17</strong></p>\n<ul>\n<li>Unittest 세션, Git FLow, Git Rebase 세션 by 은우님 - 테스트 생활화, 한시간이면 될거 미뤄서 일주일 혹은 더나아가 프로젝트 날려먹을 수 도 있으니 테스트를 늘 염두에 두고 있을것</li>\n<li>VIM 유용한 플러그인들 설치, easy-align AWOSOME! </li>\n</ul>\n</li>\n<li>\n<p><strong>19.09.18</strong></p>\n<ul>\n<li>1차 프로젝트 정리</li>\n<li><a href=\"https://blog.naver.com/skbalm/221651542337\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://blog.naver.com/skbalm/221651542337</a></li>\n<li>자료구조 세션 by 은우님 - 앞서서 고생하신 선배 개발자들의 도움으로 우리가 쉽게 편하게 다양하게 빠르게 서비스를 만들어 나갈 수 있다. ㅎㅎ 10년안에 또 어떻게 바뀌려나 </li>\n</ul>\n</li>\n<li>\n<p><strong>19.09.19</strong></p>\n<ul>\n<li>1차 프로젝트 코드리뷰! by 은우님 - 나름대로 코드 줄이려고 생각하고 짠건데 고수님 앞에선 아직 멀었다! </li>\n<li>프로젝트 signup view를 하고 있는데 입력하는 정보가 많아지니 디버깅도 어렵다. </li>\n</ul>\n</li>\n<li>\n<p><strong>19.09.20</strong></p>\n<ul>\n<li>다른팀 코드 리뷰 by 은우님. - 어제 많이 해주셔서 오늘은 쉽게 쉽게 리뷰 </li>\n<li>계속해서 signup view 디버깅 해결</li>\n<li>API 문서 만들기 </li>\n</ul>\n</li>\n<li>\n<p><strong>19.09.21</strong></p>\n<ul>\n<li>어제이어 API 문서 작성 </li>\n<li>콘텐츠 등록 view 만들기 </li>\n</ul>\n</li>\n<li>\n<p><strong>19.09.22</strong></p>\n<ul>\n<li>어제이어 콘텐츠 등록 view 만들고 테스트 &#x26; 디버깅 </li>\n</ul>\n</li>\n</ul>\n<h3 id=\"tel-trial-and-error-log\"><a href=\"#tel-trial-and-error-log\" aria-label=\"tel trial and error log permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TEL (Trial and Error Log)</h3>\n<ul>\n<li>\n<p><strong>19.09.17</strong></p>\n<ul>\n<li>python list index 범위를 초과할 경우</li>\n<li>IndexError: list index out of range</li>\n<li>unittest</li>\n<li>foreign key 참조 최소한만 만들면 된다. </li>\n<li>id 로 걸지 말고, 그냥 인스턴스로 거는편이 좋다. (Id가 꼬이는 경우도 있다.) </li>\n<li>django test 에서 Client, testcase import</li>\n<li>Client like Browser </li>\n<li>url을 통해 view 접근 한다. </li>\n<li>\n<p>참고글</p>\n<ul>\n<li><a href=\"https://koreanblacklee.github.io/posts/python/Django/test2\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://koreanblacklee.github.io/posts/python/Django/test2</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>19.09.18</strong></p>\n<ul>\n<li>\"\".join(list) &#x3C;== arrary.join(\"\") 파이썬과 JS의 양식 차이 </li>\n<li>unittest </li>\n<li>setUp 에서 참조하는 모델들은 id 값으로 참조하지 않고 instance를 만들어서 걸어야한다 </li>\n<li>test 함수에서는 그럴 필요 없이 만들어논 인스턴스 id 값만 받으면 된다.</li>\n<li>발생하는 모든 에러를 잡으려면 except Exception as  e 하고 e 확인 </li>\n</ul>\n</li>\n<li>\n<p><strong>19.09.19</strong></p>\n<ul>\n<li>NoneType’ object has no attribute ‘strip’</li>\n<li>유니크 걸어준 거에 중복값 집어 넣을시 발생하는 에러이기도 하고 </li>\n<li>넣는 정보의 오탈자에서 발생하기도 한다.  </li>\n<li>return no httpresponse</li>\n<li>object 생성 오탈자로 인해 발생 분기점이 깊이 들어가 있어서 유닛 테스트로는 디버깅을 못함. 분리시켜서 꺼내서 디버깅 성공 </li>\n<li>test &#x3C;== tset</li>\n<li>django manytomany 모델 classname_classname으로 생기는줄알았는데 아니었다.</li>\n<li>fiedlname_fieldname으로 생긴다. </li>\n<li>\n<p>↑↑↑ 도 아니다. 그냥 생기지 않는다. </p>\n<ul>\n<li>그래서 thorough model을 만들어야 하는 것이다. </li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>19.09.20</strong></p>\n<ul>\n<li>AttributeError: ‘NoneType’ object has no attribute ‘strip’ </li>\n<li>update에서 중복값 건드리면 이런 에러가. </li>\n</ul>\n</li>\n<li>\n<p><strong>19.09.22</strong></p>\n<ul>\n<li>decimal field(max<em>digit= ?, decimal</em>places =?)</li>\n<li>max digit은 decimal<em>place 포함이다. 100.22 일경우 max</em>digit=5, decimal_places=2 이다. </li>\n<li>Get 에 json.loads(request.body)하면 에러가 난다.</li>\n<li>바디 자체가 없으므로.</li>\n<li>‘Model’ object is not subscriptable”</li>\n<li>모델 objects에 objects[“field”] 안먹힌다 안먹혀</li>\n<li>TypeError: int() argument must be a string, a bytes-like object or a number, not ‘NoneType’</li>\n<li>category<em>id = int(request.GET.get(‘category</em>id’, None)) </li>\n<li>int 로 해놓은 자리에 none을 넣으면 안된다 . 0 도 안된다, ‘0’은 가능하다.</li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/posts/TIL&TEL_19-09-23/","tagSlugs":["/tag/til/","/tag/tel/","/tag/wecode/"]},"frontmatter":{"date":"2019-09-23T01:23:45.678Z","description":" 19.09.16 ~ 19.09.22 배운것, 씨름한것들 ","tags":["TIL","TEL","Wecode"],"title":" TIL&TEL 19.09.16 ~ 19.09.22 "}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/TIL&TEL_19-09-23/"}}}