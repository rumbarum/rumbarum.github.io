{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/TIL&TEL_19-09-15/","webpackCompilationHash":"6a801aafaf7b038df61c","result":{"data":{"markdownRemark":{"id":"32417d1e-14a7-5334-b0b1-75247d471f41","html":"<h3 id=\"til-today-i-learned\"><a href=\"#til-today-i-learned\" aria-label=\"til today i learned permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TIL( Today I Learned)</h3>\n<ul>\n<li>\n<p><strong>19.09.09</strong></p>\n<ul>\n<li>1차 프로젝트 페이지 인증 권한 수정함</li>\n<li>2차 프로젝트 기능 설정 및 스키마 그리기 </li>\n</ul>\n</li>\n<li>\n<p><strong>19.09.10</strong></p>\n<ul>\n<li>python keygen </li>\n<li>2차 프로젝트 테이블 그려봄</li>\n</ul>\n</li>\n<li>\n<p><strong>19.09.11</strong></p>\n<ul>\n<li>HTTPie 학습</li>\n<li>Django as_view 학습</li>\n<li>Django extension 학습</li>\n<li>2차 프로젝트 모델 만들기</li>\n</ul>\n</li>\n<li>\n<p><strong>19.09.12</strong></p>\n<ul>\n<li>결제 API 모듈 찾아봄  - 아임포트가 심플하게 사용가능, 결제업체 가입없이 테스트 가능 </li>\n<li>AWS EC2, RDS 개설 복습 </li>\n<li>Neo Vim custom </li>\n</ul>\n</li>\n<li>\n<p><strong>19.09.13</strong></p>\n<ul>\n<li>카톡 API 찾아봄 - 개인적으로 메시지 보내기 활용해보려고 한참을 찾아봤는데 안되는 기능이었다. </li>\n<li>백엔드 프로세스 블로그 읽어봄 (PlanB님 블로그 )</li>\n</ul>\n</li>\n<li>\n<p><strong>19.09.14</strong></p>\n<ul>\n<li>Django class 추상화 연습 - 무턱대고 시도해봤는데 약간의 진전만 있을뿐 코드가 효율적이라고 말하기 어렵다. 그리고 다른곳으로 응용이 가능한지도 의문. </li>\n</ul>\n</li>\n<li>\n<p><strong>19.09.15</strong></p>\n<ul>\n<li>1차 프로젝트 API document 정리 - 만들면서 같이 깔끔하게 만들어가는게 서로 좋을듯  </li>\n<li>Django Raw Query 학습 - 그냥 ORM 쓰는것 대비 효용을 아직 잘 모르겠다.  </li>\n</ul>\n</li>\n</ul>\n<h3 id=\"tel-trial-and-error-log\"><a href=\"#tel-trial-and-error-log\" aria-label=\"tel trial and error log permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TEL (Trial and Error Log)</h3>\n<ul>\n<li>\n<h6 id=\"190909\"><a href=\"#190909\" aria-label=\"190909 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>19.09.09</h6>\n<ul>\n<li>[ : ]  </li>\n<li>[ : ] 처음부터 끝까지 </li>\n<li>[ point : ] point부터 끝까지 </li>\n<li>[ : point] 처음부터 point 까지 </li>\n<li>\n<p>- 가 붙으면 상대 좌표가 끝에서 부터 시작 한다. </p>\n<ul>\n<li>list indexing 에도 사용이 가능하다</li>\n</ul>\n</li>\n<li>DB </li>\n<li>테이블 이름 소문자</li>\n<li>DB 접속 암호화 유지</li>\n<li>데이터  </li>\n<li>프론트가 놓칠수 있는 부분 백도 체크해야 한다. 아이디, 이름 공란으로 치면 처리 해야함 </li>\n<li>서버 </li>\n<li>서버 컴퓨터에서 변동 사항 있으면 적용하고 재시작 해야 변경사항 적용됨</li>\n<li>float(‘inf’) = 무한대, 작은값 비교할때 initail value 사용하기 좋다.</li>\n</ul>\n</li>\n<li>\n<h6 id=\"190910\"><a href=\"#190910\" aria-label=\"190910 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>19.09.10</h6>\n<ul>\n<li>python </li>\n<li>print( ‘str’, variable) &#x3C;== print( ‘str’ + variable) JS 에서는 오른쪽이 작동 했는데 python에서는 안된다. </li>\n<li>\n<p>import module vs from module import property</p>\n<ul>\n<li>사용할 때에 module.property // property</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<h6 id=\"190911\"><a href=\"#190911\" aria-label=\"190911 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>19.09.11</h6>\n<ul>\n<li>migration 순서가 중요하다. installed app list 에서도 선후 관계가 중요한 역할을 한다. (한번에 여러개의 앱을 동시에 올릴경우) </li>\n<li>\n<h4 id=\"class-추상화-시도들\"><a href=\"#class-%EC%B6%94%EC%83%81%ED%99%94-%EC%8B%9C%EB%8F%84%EB%93%A4\" aria-label=\"class 추상화 시도들 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>class 추상화 시도들</h4>\n</li>\n<li>\n<p>동일클래스 내에서</p>\n<ul>\n<li>변수를 self 로 엮는다.</li>\n<li>실패, 메소드에 들어오는 인자를 엮을 수가 없다. </li>\n<li>변수를 선언하는 함수를 선언한다.( 인자 없음, self 안붙임 ) </li>\n<li>실패, 함수가 변수를 선언해도 함수 밖에 있는 메소드가 저장된 변수를 불러오질 못한다. </li>\n<li>변수를 선언하는 함수를 선언한다.( 인자 있음, self 붙임 ) </li>\n<li>실패, 클래스내에 정의된 함수를 동일레벨 함수가 불러오지 못함</li>\n</ul>\n</li>\n<li>\n<p>클래스 밖에서 </p>\n<ul>\n<li><strong>함수를 선언한다. (메소드 인자 받음, self 붙임 )</strong></li>\n<li><strong>그나마 작동</strong> </li>\n</ul>\n</li>\n<li>\n<p>상속내려주는 클래스에서</p>\n<ul>\n<li>정의해도 아래로 내려가질 않는다. </li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<h6 id=\"190915\"><a href=\"#190915\" aria-label=\"190915 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>19.09.15</h6>\n<ul>\n<li>django.db.models.query_utils.InvalidQuery: Raw query must include the primary key</li>\n<li>Model.objects.raw( ) 로 raw Query를 날릴 수 있다. 단 불러온 Query Set 에 ROW의 PK 값이 들어가야지 불러온다. 안그러면 위와 같은 Error 가 난다. 라고 <strong>장고공식문서</strong>에 써있다.</li>\n<li>There is only one field that you can’t leave out - the primary key field. Django uses the primary key to identify model instances, so it must always be included in a raw query. An InvalidQuery exception will be raised if you forget to include the primary key.</li>\n<li>Model.objects.raw( ‘SELECT id, something FROM TABLE_NAME WHERE value = somevalue’)</li>\n<li>위의 조건을 통해 나오는 결과는 </li>\n<li>&#x3C;RawQuerySet: SELECT id, something FROM TABLE_NAME WHERE value = somevalue> 이다.</li>\n<li>위에 [0] 을 붙이면 나오는건 Models object (1) 이 나오고, 여기에 .attribute를 하면 다 붙어 나온다. </li>\n<li>그럼? django 처럼 instance 다 붙어 나온거 아니냐고 볼 수 있지만. </li>\n<li>id와 something은 처음 Query 를 통해 붙어 나오고, 다른 attribute들은 추가적인 query를 통해나오게 된다. </li>\n</ul>\n</li>\n</ul>\n<h1 id=\"\"><a href=\"#\" aria-label=\" permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>","fields":{"slug":"/posts/TIL&TEL_19-09-15/","tagSlugs":["/tag/til/","/tag/tel/","/tag/wecode/"]},"frontmatter":{"date":"2019-09-15T01:23:45.678Z","description":" 19.09.09 ~ 19.09.15 배운것, 씨름한것들 ","tags":["TIL","TEL","Wecode"],"title":" TIL&TEL 19.09.09 ~ 19.09.15 "}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/TIL&TEL_19-09-15/"}}}