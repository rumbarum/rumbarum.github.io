{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/understandFlexElement /","webpackCompilationHash":"fcb98f246a72633a588f","result":{"data":{"markdownRemark":{"id":"378e40c8-1014-56e5-9af4-7ae12b72984e","html":"<h2 id=\"flex--html-문서내-엘리먼트들의-배열을-도와준다\"><a href=\"#flex--html-%EB%AC%B8%EC%84%9C%EB%82%B4-%EC%97%98%EB%A6%AC%EB%A8%BC%ED%8A%B8%EB%93%A4%EC%9D%98-%EB%B0%B0%EC%97%B4%EC%9D%84-%EB%8F%84%EC%99%80%EC%A4%80%EB%8B%A4\" aria-label=\"flex  html 문서내 엘리먼트들의 배열을 도와준다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Flex = Html 문서내 엘리먼트들의 배열을 도와준다.</h2>\n<p><a href=\"https://flexboxfroggy.com/#koFlex\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://flexboxfroggy.com/#koFlex</a> 좀더 이해하기 쉽게 만들어주는 게임.</p>\n<ul>\n<li>동일레벨의 엘리먼트들을 클래스 셀렉터를 사용해 css 로 display : flex; 를 설정 후 다음의 속성들을 부여한다. </li>\n<li>\n<p>justify-content => 엘레멘트 그룹 가로배열</p>\n<ul>\n<li>flex-start: 요소들을 컨테이너의 왼쪽으로 정렬합니다.</li>\n<li>flex-end: 요소들을 컨테이너의 오른쪽으로 정렬합니다.</li>\n<li>center: 요소들을 컨테이너의 가운데로 정렬합니다.</li>\n<li>space-between: 요소들 사이에 동일한 간격을 둡니다.</li>\n<li>space-around: 요소들 주위에 동일한 간격을 둡니다.</li>\n</ul>\n</li>\n<li>\n<p>align-items =>엘레멘트 그룹 세로배열</p>\n<ul>\n<li>flex-start: 요소들을 컨테이너의 꼭대기로 정렬합니다.</li>\n<li>flex-end: 요소들을 컨테이너의 바닥으로 정렬합니다.</li>\n<li>center: 요소들을 컨테이너의 세로선 상의 가운데로 정렬합니다.</li>\n<li>baseline: 요소들을 컨테이너의 시작 위치에 정렬합니다.</li>\n<li>stretch: 요소들을 컨테이너에 맞도록 늘립니다.</li>\n</ul>\n</li>\n<li>\n<p>Flex-direction - 엘레멘트 그룹내 배열 방법 및 순서</p>\n<ul>\n<li>row: 요소들을 텍스트의 방향과 동일하게 정렬합니다.</li>\n<li>row-reverse: 요소들을 텍스트의 반대 방향으로 정렬합니다.</li>\n<li>column: 요소들을 위에서 아래로 정렬합니다.</li>\n<li>column-reverse: 요소들을 아래에서 위로 정렬합니다.</li>\n</ul>\n</li>\n<li>\n<p>order 엘레멘트 그룹내 순서 개별조정</p>\n<ul>\n<li>속성을 각 요소에 적용할 수 있습니다. order의 기본 값은 0이며, 양수나 음수로 바꿀 수 있습니다.</li>\n<li>0 자기 포지션,</li>\n<li>++ 오른쪽, 아래쪽,</li>\n<li>— 왼쪽, 위쪽</li>\n</ul>\n</li>\n<li>\n<p>align-self</p>\n<ul>\n<li>align-item 개별 적용</li>\n</ul>\n</li>\n<li>\n<p>flex-wrap 엘레멘트 그룹내 줄 맞춤</p>\n<ul>\n<li>nowrap: 모든 요소들을 한 줄에 정렬합니다.</li>\n<li>wrap: 요소들을 여러 줄에 걸쳐 정렬합니다.</li>\n<li>wrap-reverse: 요소들을 여러 줄에 걸쳐 반대로 정렬합니다.</li>\n</ul>\n</li>\n<li>\n<p>flex-flow</p>\n<ul>\n<li>flex-direction과 flex-wrap 합체</li>\n</ul>\n</li>\n<li>\n<p>align-content 엘레멘트 그룹내 ( 여러줄로( flex-wrap: wrap) )</p>\n<ul>\n<li>flex-start: 여러 줄들을 컨테이너의 꼭대기에 정렬합니다.</li>\n<li>flex-end: 여러 줄들을 컨테이너의 바닥에 정렬합니다.</li>\n<li>center: 여러 줄들을 세로선 상의 가운데에 정렬합니다.</li>\n<li>space-between: 여러 줄들 사이에 동일한 간격을 둡니다.</li>\n<li>space-around: 여러 줄들 주위에 동일한 간격을 둡니다.</li>\n<li>stretch: 여러 줄들을 컨테이너에 맞도록 늘립니다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"teltrial-and-error-log\"><a href=\"#teltrial-and-error-log\" aria-label=\"teltrial and error log permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>T.E.L.(Trial and Error Log)</h2>\n<ul>\n<li>\n<p>ES6 arrow function 선언하기 깜빡함</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> or <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">함수명</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token parameter\">param</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> 함수코드<span class=\"token punctuation\">}</span> 단순 리턴일 경우 <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> 생략 가능<span class=\"token operator\">!</span><span class=\"token operator\">!</span></code></pre></div>\n</li>\n<li>\n<p>appendChild 잘못 실행</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">doassignment</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> \n<span class=\"token keyword\">var</span> inputposition <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'h1-title'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">let</span> makePtag <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span> \nmakePtag<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">'dom'</span> <span class=\"token punctuation\">;</span> makePtag<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">'DOM'</span> <span class=\"token punctuation\">;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>makePtag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>inputposition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \ninputposition<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>makePtag<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">;</span> \n<span class=\"token function\">doassignment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>inputposition 앞에 document 붙여서 틀림.. - _ -;;;컴퓨터는 안틀려.. 바름이는 틀려… 안되면 이유가 있다.</li>\n<li>\n<p>내컴에서만 돌아가는 코드는 의미가 없어요 ㅜㅠ 끼워맞추기 코딩 고정값이 나오던 걸, 변동되는 값에 따라 달라지게 작성하였다. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getCookieValue</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> \n<span class=\"token punctuation\">{</span> <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">let</span> sentence <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>cookie <span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">let</span> position <span class=\"token operator\">=</span> sentence<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ajs_anonymous_id'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">let</span> cutlength <span class=\"token operator\">=</span> sentence<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ajs_user_id'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">2</span> <span class=\"token punctuation\">;</span> \nresult <span class=\"token operator\">=</span> sentence<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span> position<span class=\"token operator\">+</span><span class=\"token string\">'ajs_anonymous_id'</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> cutlength <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">return</span> result <span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">;</span> <span class=\"token function\">getCookieValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nFix<span class=\"token operator\">!</span> \n\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">getCookieValue</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> sentence <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>cookie <span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> cookiearray <span class=\"token operator\">=</span> sentence<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n  cookiearray<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ele<span class=\"token punctuation\">,</span>idx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ele<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> ele<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token operator\">===</span><span class=\"token string\">'ajs_anonymous_id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        result <span class=\"token operator\">=</span> ele<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">17</span><span class=\"token punctuation\">,</span>ele<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">return</span> result <span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">getCookieValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>","fields":{"slug":"/posts/understandFlexElement /","tagSlugs":["/tag/flex/","/tag/t-e-l/","/tag/css/","/tag/html/"]},"frontmatter":{"date":"2019-08-01T01:23:45.678Z","description":"CSS display 요소인 플렉스 정리 ","tags":["Flex","T.E.L","Css","Html"],"title":"Flex 알아보기  "}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/understandFlexElement /"}}}