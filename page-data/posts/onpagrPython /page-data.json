{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/onpagrPython /","webpackCompilationHash":"323a95bb0f0bdde7134b","result":{"data":{"markdownRemark":{"id":"27749b5f-4243-5325-9ef5-a0f349a6dc53","html":"<h1 id=\"python-뽀개기\"><a href=\"#python-%EB%BD%80%EA%B0%9C%EA%B8%B0\" aria-label=\"python 뽀개기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Python 뽀개기</h1>\n<ul>\n<li>\n<p>Print - 프린트다음에 오는 글자들을 출력</p>\n<ul>\n<li>print( “Hello World!“)</li>\n</ul>\n</li>\n<li>\n<h3 id=\"data-type\"><a href=\"#data-type\" aria-label=\"data type permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Data Type</h3>\n<ul>\n<li>Integer - 정수</li>\n<li>Float - 소수점이 들어간 숫자</li>\n<li>Complex Num - 실수+ 허수 복소수</li>\n<li>String 문자</li>\n<li>Boolean 조건문 평가값 T/F</li>\n</ul>\n</li>\n<li>\n<h3 id=\"variable\"><a href=\"#variable\" aria-label=\"variable permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Variable</h3>\n<ul>\n<li>변수 지정 하고 변수 수정 자유로움</li>\n<li>변수이름 = 변수값</li>\n<li>변수 이름 법칙</li>\n<li>변수 이름은 영어 알파벳과 숫자 그리고 underscore (_) 으로만 구성될 수 있습니다.</li>\n<li>변수 이름 첫글자는 알파벳이나 underscore로만 시작해야 합니다. 숫자로는 시작될 수 없습니다.</li>\n<li>영어 알파벳은 대문자와 소문자가 구분이 됩니다 (case sensitive).</li>\n</ul>\n</li>\n<li>\n<h3 id=\"string\"><a href=\"#string\" aria-label=\"string permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>String</h3>\n<ul>\n<li>fomatting</li>\n<li>\n<p>%-formatting - 코드 가독성이 떨어짐</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"Eric\"</span> age <span class=\"token operator\">=</span> <span class=\"token number\">74</span>\n<span class=\"token string\">\"Hello, %s.You are %s.\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span> \n<span class=\"token string\">'Hello Eric. You are 74.'</span>`</code></pre></div>\n</li>\n<li>\n<p>str.format() - 인수가 많아질 경우 복잡해지기 마찬가지</p>\n<p>`>>> person = {‘name’: ‘Eric’, ‘age’: 74}</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">\"Hello, {name}. You are {age}.\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>person<span class=\"token punctuation\">)</span> \n<span class=\"token string\">'Hello, Eric. You are 74.'</span>`</code></pre></div>\n<p>f-String <a href=\"https://realpython.com/python-f-strings/#arbitrary-expressions\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://realpython.com/python-f-strings/#arbitrary-expressions</a></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"Eric\"</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> age <span class=\"token operator\">=</span> <span class=\"token number\">74</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> f\"Hello<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span> You are <span class=\"token punctuation\">{</span>age<span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span>\n\"<span class=\"token string\">'Hello, Eric. You are 74.'</span>`</code></pre></div>\n<ul>\n<li>단순, 응용력 좋음, 멀티라인,</li>\n<li>Quotation Mark 1, 2, 3개의 ” “이 앞뒤로 붙어도 된다.</li>\n<li>Dictionaries 데이터도 텍스트에 삽입</li>\n<li>Note - 딕셔너리 데이터 키 이름이 텍스트 인용 부호와 같으면 오류</li>\n<li>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"></code></pre></div>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>comedian = {‘name’: ‘Eric Idle’, ‘age’: 74}\nf’The comedian is {comedian[‘name’]}, aged {comedian[‘age’]}. ’ File ”<stdin>”, line 1 f’The comedian is {comedian[‘name’]}, aged {comedian[‘age’]}.’\n^SyntaxError: invalid syntax` 참이 되려면 아래처럼\nf”The comedian is {comedian[‘name’]}, aged {comedian[‘age’]}.” ‘The comedian is {comedian[“name”]}, aged {comedian[“age”]}.’</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  </code></pre></div>\n<ul>\n<li>Braces 다중 괄호 가능하다</li>\n<li>앞뒤각각 3개이상일 경우에 앞뒤로 2개 가능 </li>\n<li>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&gt;&gt;&gt; f&quot;{{74}}&quot;\n&#39;{74}&#39;</code></pre></div>\n</li>\n<li>f string expression 부분에 ” 삽입은 불가능하다.</li>\n</ul>\n</li>\n<li>문자연결</li>\n<li>print(“Hello, ” + “World”)</li>\n<li>name = input() print(f”Hello, {name}“)</li>\n<li>multiple line 표현에는 앞뒤로 “*3 을 붙인다</li>\n</ul>\n</li>\n<li>\n<h3 id=\"number\"><a href=\"#number\" aria-label=\"number permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Number</h3>\n<ul>\n<li>따옴표 들어가면 안됨. “100” ≠ 100</li>\n<li>문자열과 숫자열의 계산 안됨</li>\n<li>수학연산</li>\n<li>\n<p>가감승제</p>\n<ul>\n<li>정수나누기 정수값으로 떨어지게 반내림을 한다. <code class=\"language-text\">7 // 3 = 2</code></li>\n<li>% : 나누고 나머지 값 표현</li>\n<li>+= 3: 변수에 값을 더하고 변수로 지정</li>\n<li>-= 3: 변수에서 값을 뺌 값을 지정</li>\n<li>*= : 변수에 값을 곱한값을 변수로 지정</li>\n<li>/= : 변수를 값으로 나눈 결과를 변수로 지정</li>\n</ul>\n</li>\n<li>\n<p>사칙연산 우선순위!</p>\n<ul>\n<li>( )</li>\n<li>** 제곱!</li>\n<li>*, / , 그리고 %</li>\n<li>\n<ul>\n<li>와 -</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<h3 id=\"white-space--indention\"><a href=\"#white-space--indention\" aria-label=\"white space  indention permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>white space = indention!!</h3>\n<ul>\n<li>js는 괄호로 종속성을 표현하지만 python은 들여쓰기로 종속성을 보여준다.</li>\n</ul>\n</li>\n<li>\n<h3 id=\"if-statement\"><a href=\"#if-statement\" aria-label=\"if statement permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>If statement</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> expression<span class=\"token punctuation\">:</span> \n  codes to execute\n<span class=\"token keyword\">if</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">:</span> \n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"산수는 어렵지 않아요!\"</span></span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>elif and Else</li>\n<li>\n<p>elif = else if</p>\n<ul>\n<li>if 구문과 연결되어 사용, if 다음에 사용이 가능하다.</li>\n<li>if 가 false 일 경우 실행 true 면 if 에서 끝남</li>\n</ul>\n</li>\n<li>\n<p>else</p>\n<ul>\n<li>if 나 , else if 가 false 일 경우 실행, 별도의 조건이 필요없음</li>\n</ul>\n</li>\n<li>Testing condition</li>\n<li>\n<p>and : 여러 조건문 연결</p>\n<ul>\n<li>모든 조건문이 true 여야 한다. 하나라도 false 가 있으면 실행이 안됨</li>\n</ul>\n</li>\n<li>\n<p>or</p>\n<ul>\n<li>and 의 반대, 테스트 조건중 하나라도 true 이면 코드가 실행이 됨</li>\n</ul>\n</li>\n<li>Nested If Statements</li>\n<li>반복되는 컨디션이 있을때는 nested if statemens 즉 중첩되는 if 구문을 사용</li>\n<li>(간격)으로 구분</li>\n<li>\n<p>2단계 이상 중첩을 하면 가독성이 너무 떨어지기 때문에 일반적으로 2단계 이상은 잘 하지 않는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> status <span class=\"token operator\">==</span> <span class=\"token string\">\"학생\"</span><span class=\"token punctuation\">:</span>\t\n  <span class=\"token keyword\">if</span> year <span class=\"token operator\">>=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\t\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"취업이 곧 다가온다\"</span><span class=\"token punctuation\">)</span>\t\n  <span class=\"token keyword\">elif</span> year <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\t\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"그래도 아직 놀 시간이 있네..\"</span><span class=\"token punctuation\">)</span>\t\n  <span class=\"token keyword\">elif</span> year <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\t\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"한창 놀때지..\"</span><span class=\"token punctuation\">)</span>\t\n  <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\t\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"열심히 공부 해서 대학교 부터 가라!\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<h3 id=\"비교-연산자\"><a href=\"#%EB%B9%84%EA%B5%90-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"비교 연산자 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비교 연산자</h3>\n<ul>\n<li>== : 같다</li>\n<li>!= : 다르다</li>\n<li>”>”: 크다 *string 도 > 으로 비교가능하다 .</li>\n<li>&#x3C; : 작다</li>\n<li>”>=” : 크거나 같다.</li>\n<li>&#x3C;= : 작거나 같다.</li>\n</ul>\n</li>\n<li>\n<h3 id=\"comment\"><a href=\"#comment\" aria-label=\"comment permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Comment</h3>\n<ul>\n<li>#으로 시작한다</li>\n<li>멀티라인삽입 - 가능하나 보통 #으로 처리한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token triple-quoted-string string\">'''This is a multiline comments. \n이렇게 여러 줄에 걸쳐서 \n주석을 삽입하는게 가능합니다...'''</span></code></pre></div>\n<p>best practice는 주석은 최소한으로 사용하는 것</p>\n</li>\n<li>\n<h3 id=\"function\"><a href=\"#function\" aria-label=\"function permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Function</h3>\n<ul>\n<li>반복코드의 효과적 사용</li>\n<li>코드의 가독성 향상</li>\n</ul>\n<p>def 함수명(parameter): 문장1 문장2 … 문장N [return 리턴값]</p>\n<p>parameter 와 return 은 optional</p>\n<ul>\n<li>\n<h4 id=\"parameter\"><a href=\"#parameter\" aria-label=\"parameter permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>parameter</h4>\n</li>\n<li>\n<p>positional arguments</p>\n<ul>\n<li>순서대로 값이 parameter로 함수에 전해지는 경우</li>\n</ul>\n</li>\n<li>\n<p>keyword arguments</p>\n<ul>\n<li>순서 대신에 parameter 이름으로 맞추어서 값을 전해준다.</li>\n<li>가독성 향상</li>\n<li>실수 가능성 줄임</li>\n</ul>\n</li>\n<li>\n<p>Mixing positional arguments and keyword arguments 두개를 섞는 것도 가능함</p>\n<ul>\n<li>keyword arguments 는 순서가 바뀌어도 상관 없지만 positional arguments 부분은 순서를 지켜줘야 한다</li>\n</ul>\n</li>\n<li>\n<p>Parameter Default Value</p>\n<ul>\n<li>Default 값이 정의된 paramter는 함수가 호출될때 값이 넘겨지 않아도 괜찮다.</li>\n<li>값이 넘겨지 않은 경우 default 값이 자동으로 넘겨지게 된다.</li>\n<li><u>default 값이 정의된 parameter가 default 값이 정의 되지 않은 parameter 보다 먼저 위치해 있으면 안됨 syntax 에러 표현</u></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<h3 id=\"list\"><a href=\"#list\" aria-label=\"list permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>List</h3>\n<ul>\n<li>string, number, boolean 등 모든 타입의 값을 저장할 수 있다.</li>\n<li>samlple</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">korea_provinces <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"강원도\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"경기도\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"경상도\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"전라도\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"충청도\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>구성</p>\n<ul>\n<li>variable 변수명</li>\n<li>Element 구성 요소</li>\n<li>index</li>\n<li>인덱스는 0부터 시작</li>\n<li>index의 마지막은 n-1 (n은 list의 총 길이)</li>\n<li>소환은 ListName[index]</li>\n<li>Adding And Changing Elements To List</li>\n<li>\n<p>Append :한개의 엘리먼트</p>\n<ul>\n<li><list name> <dot> <append> (element)</li>\n</ul>\n</li>\n<li>\n<p>: 한개 이상의 엘리먼트 추가</p>\n<ul>\n<li>list1 = list1 + list2</li>\n<li>새로 생성된 list를 변수에 다시 지정해 주지 않으면 기존 list들은 수정이 되지 않은 상태로 남아있게 된다.</li>\n</ul>\n</li>\n<li>\n<p>insert</p>\n<ul>\n<li>원하는 위치에 element를 삽입</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">cities <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"서울특별시\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"부산광역시\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"인천광역시\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"대구광역시\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"대전광역시\"</span> <span class=\"token punctuation\">]</span> cities<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"제주특별자치도 제주시\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> 부산광역시 자리<span class=\"token punctuation\">(</span> cities<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> 에 채워넣음<span class=\"token punctuation\">,</span> 나머지 뒤로 한칸씩 밀린다<span class=\"token punctuation\">.</span>\n\ncities <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"서울특별시\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"제주특별자치도 제주시\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"부산광역시\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"인천광역시\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"대구광역시\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"대전광역시\"</span> <span class=\"token punctuation\">]</span></code></pre></div>\n</li>\n<li>\n<p>Empty List</p>\n<ul>\n<li>비어있는 대괄호( )로 생성</li>\n</ul>\n</li>\n<li>\n<p>Updating Elements</p>\n<ul>\n<li>수정하고자 하는 element의 index 값을 통해 list에서 element를 선택한 후 새로운 값을 지정</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">cities <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"서울특별시\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"부산광역시\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"인천광역시\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"대구광역시\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"대전광역시\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span>cities<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"경기도 성남시\"</span></code></pre></div>\n</li>\n<li>List Slicing</li>\n<li>리스트의 일부분을 따로 copy</li>\n<li>\n<ul>\n<li>slicing은 오리지널 list를 수정하는게 아니라, 새로운 list를 만들어 낸다</li>\n</ul>\n</li>\n<li>sample<code class=\"language-text\">list_name[start : stop]</code></li>\n<li>start와 stop에는 정수만 들어가야 한다! 2.0 도 안됨!!</li>\n<li>\n<p>Slicing Steps</p>\n<ul>\n<li>list_name[start : stop : step]</li>\n<li>optional</li>\n</ul>\n</li>\n<li>\n<p>Slicing Tip</p>\n<ul>\n<li>start index를 빈칸으로 남겨두면 해당 list의 첫 요소 부터 시작</li>\n<li>stop index를 빈칸으로 남겨두면 start index 부터 끝까지 가져옴</li>\n</ul>\n</li>\n<li>Deleting Elements From List</li>\n<li>del ListName[indexNumber]</li>\n<li>Listname.remove(Element)</li>\n</ul>\n</li>\n<li>\n<h3 id=\"tuples\"><a href=\"#tuples\" aria-label=\"tuples permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tuples</h3>\n<ul>\n<li>List는 수정이 가능하지만 tuple은 한번 선언되면 수정이 불가능</li>\n<li>[…] => list , (…) => tuples</li>\n<li>2개에서 5개 사이의 요소들을 저장할때 사용</li>\n<li>특정 데이터를 ad hoc(즉석적으로) 하게 표현하고 싶을때 사용</li>\n<li>List의 요소들로 tuple을 사용<code class=\"language-text\">cords = [ (4,4), (5,2), (-2, 2), (-3, -4) ]</code></li>\n<li>인덱스 할당으로 데이터 입력이 불가능하다.<code class=\"language-text\">tuple= (value,...) (가능)``tuple[n] = value (불가능)</code></li>\n</ul>\n</li>\n<li>\n<h3 id=\"set\"><a href=\"#set\" aria-label=\"set permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Set</h3>\n<ul>\n<li>list의 친척</li>\n<li>ordering이 없다.</li>\n<li>순서가 없으므로 indexing도 없다.</li>\n<li>중복값이 존재하지 않는다. 중복값 입력시 새로운 요소가 이전 요소 대신함</li>\n<li>Set 생성하는 법</li>\n<li>\n<p>중괄호 ({ }) 사용</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">set1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>set() 함수</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">set2 <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>set를 만들기 위해서는 list를 parameter로 전달</li>\n<li>set() 함수를 사용해서 set를 만드는 경우는 list를 set로 변환하고 싶을 때</li>\n</ul>\n</li>\n<li>Set에서 새로운 요소 추가</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">my_set <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span> my_set<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>my_set<span class=\"token punctuation\">)</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>Set에서 요소 삭제</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">my_set <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span> my_set<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>my_set<span class=\"token punctuation\">)</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>Look Up : value 존재여부 알아보기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">my_set <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span> \n<span class=\"token keyword\">if</span> <span class=\"token number\">1</span> <span class=\"token keyword\">in</span> my_set<span class=\"token punctuation\">:</span> \n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1 is in the set\"</span><span class=\"token punctuation\">)</span>\n <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token keyword\">is</span> <span class=\"token keyword\">in</span> the <span class=\"token builtin\">set</span>\n<span class=\"token keyword\">if</span> <span class=\"token number\">4</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> my_set<span class=\"token punctuation\">:</span> \n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"4 is not in the set\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token operator\">></span><span class=\"token number\">4</span> <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> the <span class=\"token builtin\">set</span></code></pre></div>\n<ul>\n<li>Intersection (교집합) &#x26; Union (합집합)</li>\n<li>\n<p>교집합은 &#x26; 키워드 혹은 intersection</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">set1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">}</span> \nset2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>set1 <span class=\"token operator\">&amp;</span> set2<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>set1<span class=\"token punctuation\">.</span>intersection<span class=\"token punctuation\">(</span>set2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>합집합은 | 키워드 혹은 union 함수</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>set1 <span class=\"token operator\">|</span> set2<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>set1<span class=\"token punctuation\">.</span>union<span class=\"token punctuation\">(</span>set2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<h3 id=\"dictionary\"><a href=\"#dictionary\" aria-label=\"dictionary permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dictionary</h3>\n<ul>\n<li>object 는 키에 스트링 표현을 안붙여도 입력이 가능했는데 Dictionary는 그러지가 않는다.</li>\n<li>sample</li>\n<li>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">my_dic <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"key1\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"value1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"key2\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"value2\"</span><span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<p>Dictionary에서 요소(element) 읽어들이기</p>\n<ul>\n<li>DictionaryName[“key Name”]</li>\n<li>Elements add</li>\n<li><code class=\"language-text\">DictionaryName[New_Key]=new_value</code></li>\n<li>동일한 key가 이미 존재할 경우 새로운 값이 대체한다</li>\n<li>Elements fix</li>\n<li><code class=\"language-text\">DictionaryName[Key] = fixed Element.</code></li>\n<li>Elements remove</li>\n<li><code class=\"language-text\">del DictionaryName[Key]</code></li>\n<li>Looping</li>\n<li>\n<p>for each_key in DictionaryID</p>\n<ul>\n<li>딕셔너리의 키값들을 리턴</li>\n</ul>\n</li>\n<li>\n<p>for each_key in DictionaryID.values()</p>\n<ul>\n<li>밸류값들을 리턴</li>\n</ul>\n</li>\n<li>\n<p>Looping Dictionary With Both Keys And Values</p>\n<ul>\n<li>for each_key, each value in DictionaryID.items()</li>\n<li>Dictionary의 items 함수는 key와 value를 tuple로 리턴</li>\n</ul>\n</li>\n<li>Complex Dictionary</li>\n<li>\n<p>List of Dictionaries</p>\n<ul>\n<li>손쉽게 여러 dictionary들을 grouping</li>\n<li>특정 dictionary 접근시 코드와 실행 시간이 길어진다.</li>\n</ul>\n</li>\n<li>\n<p>Nested Dictionary</p>\n<ul>\n<li>원하는 데이터의 키값으로 바로 찾을 수 있다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<h3 id=\"for-loops\"><a href=\"#for-loops\" aria-label=\"for loops permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>For Loops</h3>\n<ul>\n<li><code class=\"language-text\">for element in list: do_something_with_element</code></li>\n<li>For 문은 tuple, set 등에서도 사용이 가능하다.</li>\n<li>Break</li>\n<li>다음 interation으로 넘어가지 않고 for 구문에서 빠져나옴</li>\n<li>Continue</li>\n<li>for 문 안의 추가된 코드 실행안시키고 interation으로 넘어가고 싶을때는 continue</li>\n<li>Nested For Loops</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">  numbers1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n  numbers2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">for</span> num1 <span class=\"token keyword\">in</span> numbers1<span class=\"token punctuation\">:</span> \n    <span class=\"token keyword\">for</span> num2 <span class=\"token keyword\">in</span> numbers2<span class=\"token punctuation\">:</span> \n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>num1<span class=\"token punctuation\">}</span></span><span class=\"token string\"> * </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>num2<span class=\"token punctuation\">}</span></span><span class=\"token string\"> == </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>num1 <span class=\"token operator\">*</span> num2<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<h3 id=\"while-loops\"><a href=\"#while-loops\" aria-label=\"while loops permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>While Loops</h3>\n<ul>\n<li>특정 조건문이 True 일 경우에만 코드블록을 반복 실행</li>\n<li>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">while</span> <span class=\"token operator\">&lt;</span>조건문<span class=\"token operator\">></span><span class=\"token punctuation\">:</span> \n<span class=\"token operator\">&lt;</span>수행할 문장<span class=\"token number\">1</span><span class=\"token operator\">></span> \n<span class=\"token operator\">&lt;</span>수행할 문장<span class=\"token number\">2</span><span class=\"token operator\">></span> \n<span class=\"token operator\">&lt;</span>수행할 문장<span class=\"token number\">3</span><span class=\"token operator\">></span> \n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> \n<span class=\"token operator\">&lt;</span>수행할 문장N<span class=\"token operator\">></span> </code></pre></div>\n</li>\n</ul>\n<p>number = 0\nwhile number &#x3C;= 10:\nprint(number) number += 1</p>\n<blockquote>\n<p>0…10</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Break &amp; Continue\n\n- For문과 동일하게 break는 while문을 강제종료\n\n- continue는 다음 iteration으로 넘어갑니다.\n\n- ```python\n  number = 0\n  while number &lt;= 10: \n    if number == 9: \n      break \n    elif number &lt;= 5: \n      number += 1 continue \n    else: \n      print(number) \n      number += 1\n  \n  &gt; 678</code></pre></div>\n<ul>\n<li>While Else</li>\n<li>while의 조건문이 False 이면 실행</li>\n<li>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">while</span> <span class=\"token operator\">&lt;</span>조건문<span class=\"token operator\">></span><span class=\"token punctuation\">:</span> \n<span class=\"token operator\">&lt;</span>수행할 문장<span class=\"token number\">1</span><span class=\"token operator\">></span> \n<span class=\"token operator\">&lt;</span>수행할 문장<span class=\"token number\">2</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>수행할 문장<span class=\"token number\">3</span><span class=\"token operator\">></span> \n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> \n<span class=\"token operator\">&lt;</span>수행할 문장N<span class=\"token operator\">></span> \n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> \n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">while</span>문이 종료된 후 수행할 문장<span class=\"token number\">1</span><span class=\"token operator\">></span> \n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">while</span>문이 종료된 후 수행할 문장<span class=\"token number\">2</span><span class=\"token operator\">></span> \n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">while</span>문이 종료된 후 수행할 문장<span class=\"token number\">3</span><span class=\"token operator\">></span> \n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">while</span>문이 종료된 후 수행할 문장N<span class=\"token operator\">></span></code></pre></div>\n</li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/posts/onpagrPython /","tagSlugs":["/tag/python/"]},"frontmatter":{"date":"2019-08-04T01:23:45.678Z","description":"파이썬 복습을 하기위한 자료","tags":["Python"],"title":"Python 한눈에 톺아보기"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/onpagrPython /"}}}