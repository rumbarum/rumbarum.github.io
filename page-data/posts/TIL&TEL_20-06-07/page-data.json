{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/TIL&TEL_20-06-07/","webpackCompilationHash":"7f21b5533f048302ba22","result":{"data":{"markdownRemark":{"id":"d2f44ebb-3b01-5379-88d7-8000d2d6c597","html":"<h2 id=\"til-today-i-learned\"><a href=\"#til-today-i-learned\" aria-label=\"til today i learned permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TIL( Today I Learned)</h2>\n<ul>\n<li>\n<p><strong>20-06-01 월</strong></p>\n<ul>\n<li>프로세스 처리 등록하기</li>\n<li>프로젝트 회의</li>\n</ul>\n</li>\n<li>\n<p><strong>20-06-02 화</strong></p>\n<ul>\n<li>서버 동작과 프로세스 동작 분리</li>\n<li>프로세스 별도 배포 및 가동</li>\n<li>시작할때 인자를 받지 않고 시작하도록 변경</li>\n<li>인자들 DB에서 받아오기</li>\n<li>프로세스 전과정 적으면서 해보니 정리가 잘 되고 빠진 부분 없이 순차로 진행이 되었다.</li>\n</ul>\n</li>\n<li>\n<p><strong>20-06-03 수</strong></p>\n<ul>\n<li>프로세스 처리 동작 테스트</li>\n</ul>\n</li>\n<li>\n<p><strong>20-06-04 목</strong></p>\n<ul>\n<li>신규 직원입사시 프로세스 위키화</li>\n<li>DB 정보 통합하기</li>\n</ul>\n</li>\n<li>\n<p><strong>20-06-05 금</strong></p>\n<ul>\n<li>프로세스 에러 잡기</li>\n</ul>\n</li>\n<li>\n<p><strong>20-06-06 토</strong></p>\n<ul>\n<li>프로세스 동작 시키기</li>\n<li>DB 값 추출하는 SQL 만들기</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"tel-trial-and-error-log\"><a href=\"#tel-trial-and-error-log\" aria-label=\"tel trial and error log permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TEL (Trial and Error Log)</h2>\n<ul>\n<li>\n<p><strong>20-06-01</strong></p>\n<ul>\n<li>Error: ValueError: invalid literal for int() with base 10: ‘main.py’</li>\n<li>Situation: sys.argv[0] 으로 값 받고 있을때</li>\n<li>Reason: argv[0] 은 파이썬 실행 파일 명. </li>\n<li>Solution: argv[1] &#x3C;== argv[0]</li>\n<li>Error: TypeError: unsupported type for timedelta days component: str</li>\n<li>Situation: sys.argv[1] 으로 값 받고 있을때 </li>\n<li>Reason: argv[1] 은 str으로 처리함</li>\n<li>Solution: int( argv[1] ) 처리함</li>\n</ul>\n</li>\n<li>\n<p><strong>20-06-02</strong></p>\n<ul>\n<li>Error: Column ‘display_status’ in where clause is ambiguous</li>\n<li>Situation: SQL Select </li>\n<li>Reason: 동일한 이름의 컬럼이 한개의 테이블이 아닌 여러개의 테이블에 존재할때 해당 컬럼을 어느 테이블에서 가져올지 지정하지 않아서 발생하는 에러</li>\n<li>Solution: A.column등으로 테이블 지정 필요.</li>\n</ul>\n</li>\n<li>\n<p><strong>20-06-03</strong></p>\n<ul>\n<li>Error: None: The sole value of the type NoneType. None is frequently used to represent the absence of a value, as when default arguments are not passed to a function. Assignments to None are illegal and raise a SyntaxError.</li>\n<li>Situation: function argument로 None을 넣었다.</li>\n<li>Reason: function dafault parameter로 None을 넣어놓는 거랑은 의미가 다르다.</li>\n<li>Solution: 함수 실행 값에는 None을 넣으면 동작이 안된다</li>\n<li>Error: requests response 객체는 status 가 없다</li>\n<li>Situation: request parse 중 에러</li>\n<li>Reason: instance attribute pick error</li>\n<li>Solution: status_code &#x3C;== status</li>\n</ul>\n</li>\n<li>\n<p><strong>20-06-05</strong></p>\n<ul>\n<li>Error: mutable 객체( python dict ) 변형 한 상태로 다른 객체에서 동일한 객체 변형해서 사용시.. 문제가 생긴다.</li>\n<li>Situation: 값이 내가 기대했던거랑 이상하게 나옴.</li>\n<li>Reason: mutable dict 객체에서 값을 변형하고 다음 </li>\n<li>Solution: deepcopy로 복사본 만들어서 사용, mutable 변형은 피하는게 상책, 값만(imutable e.g. str, int) 쓰거나 하는게 좋음. 이어지는 과정에서 immutable을 사용하고 있지는 않은지 확인이 필요하다.</li>\n<li>Error: list unpacking error</li>\n<li>Situation: *arg 쪼갤때 list 추가로 받는걸 별도로 남겼는데 안됨\nmain<em>number, call</em>date, call<em>type, inner</em>number, receiver<em>number, others = call</em>info</li>\n<li>Reason: unpacking elements > target element</li>\n<li>Solution: *으로 잔여 elements를 받으려면 수를 맞춰야한다.</li>\n<li>Error: MySQL 1292 Incorrect datetime value</li>\n<li>Situation: time 값 사용시 이상해짐</li>\n<li>\n<p>Reason: The problem is that ‘2011-03-13 02:53:50’ is illegal because of daylight saving time switch between 2 and 3 AM, so all time values between 2 and 3 am on any DST introduction day are invalid. Same for ‘2016-03-13 02:32:21’, etc</p>\n<ul>\n<li>즉 오전 2시랑 오전 3시랑 동일해진다는 얘기??</li>\n</ul>\n</li>\n<li>Solution: Change the system timezone to the one that does not use DST and you should be fine</li>\n<li><strong>일광 절약 시간제</strong>(日光節約時間制, <a href=\"https://ko.wikipedia.org/wiki/%EB%AF%B8%EA%B5%AD_%EC%98%81%EC%96%B4\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">미국 영어</a>: Daylight saving time, <strong>DST</strong>) 또는 <strong>서머 타임</strong>(<a href=\"https://ko.wikipedia.org/wiki/%EC%98%81%EA%B5%AD_%EC%98%81%EC%96%B4\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">영국 영어</a>: summer time)은 하절기에 표준시를 원래 시간보다 한 시간 앞당긴 시간을 쓰는 것을 말한다. 즉, 0시에 일광 절약 시간제를 실시하면 1시로 시간을 조정해야 하는 것이다. 실제 낮 시간과 사람들이 활동하는 낮 시간 사이의 격차를 줄이기 위해 사용한다. 여름에는 일조 시간이 길므로 활동을 보다 일찍 시작하여 저녁 때 직장이나 학교에서 이렇게 ‘절약된 낮 시간’을 더 밝은 상태에서 오후에 활동할 수 있게 하는 효과가 있으며, 또한 직장이나 학교에서의 조명과 연료 등의 절감 효과를 기대할 수 있기 때문이다. 온대 지역에서는 계절에 따른 일조량의 차이가 크므로 일광 절약 시간제는 보통 온대 지역에서 시행된다.</li>\n</ul>\n</li>\n<li>\n<p><strong>20-06-06</strong></p>\n<ul>\n<li>Error: sequence 의 값이 없을 때는 is None으로 판별이 안되고, true / false로 판별이 된다.</li>\n<li>Situation: DB 값 리턴 some container의 값이 있는지 없는지 if statement로 판단 </li>\n<li>Reason: 문법을 잘 못 알고 적용하고 있었음</li>\n<li>\n<p>Solution: if some<em>seq: &#x3C;== if some</em>seq is not None: </p>\n<ul>\n<li>is 는 value compare, == 는 메모리 값 compare</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/posts/TIL&TEL_20-06-07/","tagSlugs":["/tag/til/","/tag/tel/"]},"frontmatter":{"date":"2020-06-07T01:23:45.678Z","description":" 20.06.01~20.06.07 배운것, 씨름한것들 ","tags":["TIL","TEL"],"title":" TIL&TEL 20.06.01~20.06.07  "}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/TIL&TEL_20-06-07/"}}}