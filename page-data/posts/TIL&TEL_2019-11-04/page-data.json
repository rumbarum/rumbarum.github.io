{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/TIL&TEL_2019-11-04/","webpackCompilationHash":"0f5a9a55e3b625b8dc03","result":{"data":{"markdownRemark":{"id":"7de73a3f-ae8a-53af-a368-c4de33aa9688","html":"<h3 id=\"til-today-i-learned\"><a href=\"#til-today-i-learned\" aria-label=\"til today i learned permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TIL( Today I Learned)</h3>\n<ul>\n<li>\n<p><strong>19-10-28월</strong></p>\n<ul>\n<li>vim python compile 하기 - 몇몇 플러그인이 컴파일을 요구해서 헤매다가 완료했는데 vim compile이 문제가 아니었다. nvim의 버전이 문제였다.</li>\n<li>@ 15:00 개발자 면접</li>\n<li>인프라에 관련한 질문들을 받았다. </li>\n<li>알고리즘 답변이 있었는데 너무 쉽게 대답했다. 고민의 흔적이 안담김.</li>\n<li>@ 19:30 백엔드 스터디</li>\n<li>일급 객체(로써의) 함수</li>\n<li>고위함수</li>\n<li>ruduce functool로 분리 sum 이 더 낫다.</li>\n<li>\n<p>python lamda 다른 언어들에 비해 잘 안쓰게 되는 익명함수</p>\n<ul>\n<li>익명인데 람다라고 이름을 붙여야한다. ?</li>\n<li>다른 곳에서는 익명함수 많이 쓰인다. </li>\n</ul>\n</li>\n<li>콜러블. ( ) 를 붙일 수 있는가.</li>\n<li>\n<p>def f (a, * , b)</p>\n<ul>\n<li>return a,b </li>\n<li>f (1, b=2) b를 kw arg 강제할수 있다. </li>\n</ul>\n</li>\n<li>annotation 주석 느낌, 에러 잡기 위해서는 Lint를 사용했을 때 warning 정도만 가능하다.</li>\n<li>\n<p>operator module</p>\n<ul>\n<li>methodcaller( ) </li>\n<li>class 내장 method 수정 </li>\n</ul>\n</li>\n<li>\n<p>functool</p>\n<ul>\n<li>partial()</li>\n<li>내가 못 고치는 함수를 부분적으로 고칠 수 있다.</li>\n<li>함수형프로그래밍에 유용.</li>\n<li>partialmethod() </li>\n<li>partial과 동일하지만 method에 작동하도록 </li>\n<li>lru_cache( )  속도가 중요한 시스템. 메모리. 잘쓰면 싱글이 멀티보다 빠르다. </li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>19-10-29화</strong></p>\n<ul>\n<li>@ 11:00 면접 </li>\n<li>어떤 회사인지에 대한 이야기를 많이 들음. 회사 이해가 되어서 좋았음</li>\n<li>파이썬 보다는 어떤 개발자가 되고 싶은지에 대해서 얘기를 많이함</li>\n</ul>\n</li>\n<li>\n<p><strong>19-10-30수</strong></p>\n<ul>\n<li>@ 17:00 면접</li>\n<li>이전의 면접 경험을 바탕으로 잘 하겠거니 하고 갔음</li>\n<li>생각지도 않은 부분에 대해서 질문을 받고 어버버하다가 그 뒤의 것도 내가 얼어서 해결을 제대로 하지 못했다.</li>\n</ul>\n</li>\n<li>\n<p><strong>19-10-31목</strong></p>\n<ul>\n<li>@ 10:00 온라인 코딩테스트</li>\n<li>테스트 케이스를 너무 단순화 시켜서 해결책을 단순하게 생각함.</li>\n<li>뭔가 찜찜하긴 했는데 검증 안하고 그냥 빨리 제출함.</li>\n<li>제출 해놓고 통과 안되는 테스트 케이스가 생각남.</li>\n<li>끝까지 최선을 다하지 않은게 아쉬움.</li>\n<li>블로그</li>\n<li>지금까지 경험한 면접에 대해서 정리 아웃라인 잡아봄</li>\n</ul>\n</li>\n<li>\n<p><strong>19-11-01금</strong></p>\n<ul>\n<li>작성한 코드를 설명하는 시간이 있어서 소개할 코드 로직은 고치지 않고 스타일 통일함.</li>\n<li>@ 16:00 면접</li>\n<li>대답 못한 부분들이 있었으나 알지 못하는 부분이라 어쩔 수 없었던 부분이었다.</li>\n<li>그 외에는 내가 말 할 수 있는 것들은 다 말했다. </li>\n<li>알고리즘도 이전 면접에서 한번 절은 경험을 바탕으로 안 절고 잘 해결</li>\n<li>면접에 들어온 개발자들과 계속해서 긍정 소통을 이어 나가서 내가 느끼기엔 만족할 면접이었다.</li>\n</ul>\n</li>\n<li>\n<p><strong>19-11-02토</strong></p>\n<ul>\n<li>면접경험 총 정리하는 블로그 작성 </li>\n<li><a href=\"https://blog.naver.com/skbalm/221695335862\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://blog.naver.com/skbalm/221695335862</a></li>\n<li>면접에서 들었던 것 정리 </li>\n<li>jwt의 보안 취약점</li>\n<li>다른 알고리즘 풀이</li>\n</ul>\n</li>\n<li>\n<p><strong>19-11-03일</strong></p>\n<ul>\n<li>면접 특강을 해볼까 싶은 마음이 들어 개요 짬</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"tel-trial-and-error-log\"><a href=\"#tel-trial-and-error-log\" aria-label=\"tel trial and error log permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TEL (Trial and Error Log)</h3>\n<ul>\n<li>\n<p><strong>19-10-30</strong></p>\n<ul>\n<li>list.append(ele) &#x3C;= list.add.(ele)</li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/posts/TIL&TEL_2019-11-04/","tagSlugs":["/tag/til/","/tag/tel/","/tag/wecode/"]},"frontmatter":{"date":"2019-11-04T01:23:45.678Z","description":" 19.10.28 ~ 19.11.03 배운것, 씨름한것들 ","tags":["TIL","TEL","Wecode"],"title":" TIL&TEL 19.10.28 ~ 19.11.03 "}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/TIL&TEL_2019-11-04/"}}}