{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/TIL&TEL_19-08-28/","webpackCompilationHash":"0f5a9a55e3b625b8dc03","result":{"data":{"markdownRemark":{"id":"4dae6182-c2b4-521d-b446-c412967501e4","html":"<h3 id=\"til-today-i-learned\"><a href=\"#til-today-i-learned\" aria-label=\"til today i learned permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TIL( Today I Learned)</h3>\n<ul>\n<li><strong>19.08.26</strong></li>\n<li>Scrapy를 이용한 웹사이트 크롤링 - 하나의 정보만 긁어 오자면 1시간도 안걸려서 긁어 올 수 있다. 사이트 정보의 정리가 잘 되어 있을 경우에는 금방 긁어 올 수 있다. 여러개의 정보를 선택적으로 가져오려면 머리를 좀 써야 한다. </li>\n<li>프로젝트 소스기본환경 설정 - 어려운건 아닌데 꼼꼼하게 해야한다. 그래야 동료들이 중복되는 일을 하는걸 막아 시간낭비를 줄인다.</li>\n<li><strong>19.08.27</strong></li>\n<li>데이터베이스에 대한 이해 - 기존에 접해 보지 못했던 분야라 이해가 알듯 말듯 아리송하다. </li>\n<li>크롤링 세션 by 지훈님 - html이란 구조로 이루어져 있는 것이 웹이다 보니, 구조를 통해 정보를 빼오는 것도 쉽다. 모든 데이터가 웹으로 올라오는 순간 모든이에게 열리는 것인데 꼭 좋은건가. </li>\n<li><strong>19.08.28</strong></li>\n<li>DB 세션 by 은우님 - 제대로 다루려면 적응하는데 상당한 시간이 들어갈 것 같다.</li>\n<li>django 를 통한 데이터베이스만들기에 대한 이해 - SQL을 통해 DB 모델을 만드는 것과, 그것을 편하게 만들기 위해 만들어진 django는 또 다르다. 어떻게 보면 사용자 편의성을 증대하는 것이고, 다른 면에서는 성장을 막는것 같기도 하다.</li>\n</ul>\n<h3 id=\"tel-trial-and-error-log\"><a href=\"#tel-trial-and-error-log\" aria-label=\"tel trial and error log permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TEL (Trial and Error Log)</h3>\n<ul>\n<li><strong>19.08.26</strong></li>\n<li>python index( ) &#x3C;== index[ ]  index( element) 를 사용하면 원하는 element 를 찾을 수 있다. 메소드다 . </li>\n<li>python str slice = str[startposition:endposition] (endposition str is Not included)  </li>\n<li><strong>19.08.27</strong></li>\n<li>module import from 을 안써주었다. from을 안써도 되는게 있긴 있다. 헷갈리진 말자</li>\n<li>max<em>length Max</em>length로 잘못침 </li>\n<li>django settings language setting <code class=\"language-text\">ko-KR</code> &#x3C;== ko_KR</li>\n<li>python ’ ’ 안에는 ” ” , ” ” 안에는 ’ ’ 로 따옴표 표시한다. </li>\n<li>python shell 에서 django orm 부르기 from app이름.models import 모델 클래스</li>\n<li>scrapy.py는 반응형으로 튀어나온 html을 잡지 못한다. </li>\n<li><strong>19.08.28</strong></li>\n<li>django class 다음  <code class=\"language-text\">:</code> 빼먹음  은근히 자꾸 까먹는다. </li>\n</ul>","fields":{"slug":"/posts/TIL&TEL_19-08-28/","tagSlugs":["/tag/til/","/tag/tel/","/tag/wecode/"]},"frontmatter":{"date":"2019-08-28T01:23:45.678Z","description":" 19.08.26~ 19.08.28 배운것, 씨름한것들 ","tags":["TIL","TEL","Wecode"],"title":" TIL&TEL 19.08.26~19.08.28 "}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/TIL&TEL_19-08-28/"}}}