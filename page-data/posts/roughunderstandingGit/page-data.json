{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/roughunderstandingGit/","webpackCompilationHash":"06cf07971378a62c2b6e","result":{"data":{"markdownRemark":{"id":"cc172d75-0b7e-5ab3-80e2-d4d623536ae0","html":"<h2 style=\"color:rgb(9, 136, 104)\"> 모든 버전의 수정내역을 기록한다. </h2>\n- ### Git\n<ul>\n<li>\n<h4 id=\"version-control-system\"><a href=\"#version-control-system\" aria-label=\"version control system permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>version control system</h4>\n<ul>\n<li>만약 한개의 파일을 수정하고 수정하고 수정한다면, 저장하기로 덮어쓴다.(수정내역은 알수 없고 최종파일만 존재한다. ) 또는 버전별 파일들을 계속 해서 최종의 최종의 최종의 파일까지 만들어 내기도 한다. </li>\n<li>\n<p>한개의 파일이 아니라 다수의 파일을 수정하고, 각각의 수정내역을 필요에 따라 볼수 있게 만들려면? </p>\n<ul>\n<li>각각의 버전별 파일을 만들고 수정내역을 스프레드 시트 파일 하나를 만들어서 일일이 저장해놔야할 것이다. </li>\n<li>이 스프레드 시트 파일 역할을 Git이 한다고 한다.(수정날짜, 수정자, 수정한 파일, 수정한코드 등을 자동으로 기록한다. 그리고 어떤 내역들을 변경했는지 commit으로 적어준다. )</li>\n<li>참고로 Git은 리눅스 만든 리눅스토발즈 아저씨가 만들었다. 개발자들 최고 많이 쓰는 2개를 만듦.</li>\n</ul>\n</li>\n<li>코드 버전별 세이브 포인트를 만들어 놓는셈이다. </li>\n</ul>\n</li>\n<li>\n<p>Git은 기존의 버전관리 시스템 대비 협업이 쉽다.</p>\n<ul>\n<li>\n<p>모든 파일을 다 다운 받기 때문에 서버 문제가 있어도 기존에 받아놓은 파일로 복구 또는 다른 서버를 통해 관리가 가능하다. </p>\n<ul>\n<li>행여나git hub 서버 다운시 다운 받아논 걸로 한다. </li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<h3 id=\"git-hub\"><a href=\"#git-hub\" aria-label=\"git hub permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Git hub</h3>\n<ul>\n<li>Git을 관리하는 서버</li>\n<li>독자시스템 구축 대비 저렴한 비용</li>\n<li>파일 공유 및 코드 리뷰가 쉽다. </li>\n</ul>\n</li>\n<li>\n<h4 id=\"git-진행-단계-stage\"><a href=\"#git-%EC%A7%84%ED%96%89-%EB%8B%A8%EA%B3%84-stage\" aria-label=\"git 진행 단계 stage permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GIT 진행 단계 stage</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">local <span class=\"token operator\">==</span><span class=\"token operator\">></span> file <span class=\"token operator\">-</span><span class=\"token operator\">></span> modified <span class=\"token operator\">-</span><span class=\"token operator\">></span> Staged <span class=\"token operator\">-</span><span class=\"token operator\">></span> Committed\n<span class=\"token parameter\">push</span> <span class=\"token operator\">=></span> Github</code></pre></div>\n<ul>\n<li>파일을 원하는 대로 modify 하고 Stage 단계로 넘긴다. </li>\n<li>stage 중간단계 commit을 준비한다.  </li>\n<li>commit 하면 수정하기 어렵다.  되도록이면 Stage 전단계에서 끝내는 걸로. </li>\n</ul>\n</li>\n<li>\n<h3 id=\"branch--merge\"><a href=\"#branch--merge\" aria-label=\"branch  merge permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Branch &#x26; Merge</h3>\n<ul>\n<li>Branch는 줄기인 Master에서 뻗어나온 가지이다. Master를 베이스로 가지로 나누어 개발자들 끼리 역할을 분담해서 진행한다. 보통 기능 단위로 Branch 따와서 작업을 한다. </li>\n<li>Merge는 처리한 가지를 다시 Master에 합치는 것이다 . </li>\n<li>여러 가지로 뻗어 나간 가지에서 상이한 개발자가 동일한 부분을 수정하게 되면 Merge 과정에서 conflict가 나타나게 된다. 이는 프로그램 버그 발생의 큰 요인이다. </li>\n<li>내가 A 파일 첫 줄에 A++ 라고 쓰고 다른 개발자가 A파일 첫 줄에 A—라고 쓰면 컴퓨터는 A++ 와 A— 둘중에 어느것이 맞는지 판단을  할 수가 없고 개발자에게 이를 수정할 것을 요구한다. 앞선 개발과 에러테스트에 힘을 쏟은 개발자는 여기서 대충 넘어가게 되는 경우가 종종 생긴다. </li>\n</ul>\n</li>\n<li>\n<h3 id=\"commit\"><a href=\"#commit\" aria-label=\"commit permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Commit</h3>\n<ul>\n<li>commit 메시지 상세하게 남기는게 정석 - django git에서 퍼온 commit 예 </li>\n<li>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Fixed #29979, Refs #17337 -- Extracted AutoField field logic into a mixin and refactored AutoFields.\n\nThis reduces duplication by allowing AutoField, BigAutoField and\nSmallAutoField to inherit from IntegerField, BigIntegerField and\nSmallIntegerField respectively. Doing so also allows for enabling the\nmax_length warning check and minimum/maximum value validation for auto\nfields, as well as providing a mixin that can be used for other possible\nfuture auto field types such as a theoretical UUIDAutoField.</code></pre></div>\n</li>\n</ul>\n<p>commit 수정</p>\n<ul>\n<li>push 하기 전에는 가능하다. </li>\n<li>만약 commit 한 버전이 공유가 되면 바꾸지 말아야한다. 다른 개발자가 내가 공유한 것을 바탕으로 빌드하던건이 망가지게 될 가능성이 생긴다. </li>\n<li>history</li>\n<li>push 됬을때 commit 시간이 마스터 파일에 박힌다.  </li>\n</ul>\n</li>\n<li>\n<h3 id=\"유용한-git-tool\"><a href=\"#%EC%9C%A0%EC%9A%A9%ED%95%9C-git-tool\" aria-label=\"유용한 git tool permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>유용한 Git Tool</h3>\n<ul>\n<li>\n<h4 id=\"tig-text-mode-interface-for-git\"><a href=\"#tig-text-mode-interface-for-git\" aria-label=\"tig text mode interface for git permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tig: text-mode interface for Git</h4>\n</li>\n<li>Git 기록들을 보기 쉽게 만들어준다. (git log 들)</li>\n<li>\n<h4 id=\"diff-so-fancy\"><a href=\"#diff-so-fancy\" aria-label=\"diff so fancy permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>diff-so-fancy</h4>\n</li>\n<li>diff는 파일이나 폴더들의 수정사항들을 저장해놓는 것</li>\n<li>컴퓨터가 읽을 수 있는 형태로만 적힌 것을 사람이 읽기 쉽도록 표현해서 보여준다. </li>\n<li>\n<h4 id=\"git-extra\"><a href=\"#git-extra\" aria-label=\"git extra permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Git Extra</h4>\n</li>\n<li>기본 깃 기능에 추가 기능들 구현( git summary)</li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/posts/roughunderstandingGit/","tagSlugs":["/tag/backend/","/tag/git/","/tag/github/"]},"frontmatter":{"date":"2019-08-22T01:23:45.678Z","description":"요즘 개발자라면 빼먹을 수 없는 Git 초스피드 훑어보기 ","tags":["Backend","Git","Github"],"title":" Git 간단하게  돌아보기"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/roughunderstandingGit/"}}}