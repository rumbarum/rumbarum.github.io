{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/httpieintro/","webpackCompilationHash":"024d5db3f3be61742811","result":{"data":{"markdownRemark":{"id":"7c0d5921-c150-56d6-a434-c82f1d04a984","html":"<h2 style=\"color:rgb(9, 136, 104)\">터미널로 통신 하는게 중요해?</h2>\n그렇다! 그래서 HTTPie가 있다. \n<p>왜? gui를 지원하지 않는 환경에서는 cli로 작업을 해야하거든! 서버 컴퓨터에서는 우리가 눈으로 보는것 같은 그래픽기반( 눈에 보이는 아이콘, 누를 수 있는 버튼의 존재 )이 아니다. 그래서 오로지 텍스트를 보내고 텍스트를 받을 뿐이다. 그런 텍스트도 잘 맞춘 양식에 맞춰 보여준다면 (텍스트 컬러, 텍스트 배치 등을 통해) 작업의 효율이 증대한다!  </p>\n<p>그래픽 기반의 HTTP 통신 테스트 해볼 수 있는 프로그램으로는 POST MAN 이 있다. (프론트엔드 유저분들 참고 )</p>\n<ul>\n<li>\n<p>HTTPie 설치</p>\n<ul>\n<li>\n<h3 id=\"macos\"><a href=\"#macos\" aria-label=\"macos permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>macOS</h3>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token variable\">$brew</span> <span class=\"token function\">install</span> httpie\n\n<span class=\"token variable\">$pip</span> <span class=\"token function\">install</span> --upgrade https://github.com/jakubroztocil/httpie/archive/master.tar.gz</code></pre></div>\n</li>\n<li>\n<p>HTTPie 사용 </p>\n<ul>\n<li>다양한 기능을 제공하는데 지금 까지 많이 사용 하는건 아래 4가지 정도이다. 그 외 다른 사용법은 홈페이지를 참조하면 된다. </li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>아이템 타입</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HTTP Headers <code class=\"language-text\">Name:Value</code></td>\n<td>헤더 값 입력 <code class=\"language-text\">X-API-Token:123</code>.</td>\n</tr>\n<tr>\n<td>URL parameters <code class=\"language-text\">name==value</code></td>\n<td>URL query string 값 입력    <code class=\"language-text\">offset=0 limit =10</code></td>\n</tr>\n<tr>\n<td>Data Fields <code class=\"language-text\">field=value</code>, <code class=\"language-text\">field=@file.txt</code></td>\n<td>Json 형태의 값으로 자동 입력(default). <code class=\"language-text\">user_id=ThisisID user_pw=Thisispassword</code></td>\n</tr>\n<tr>\n<td>Raw JSON fields <code class=\"language-text\">field:=json</code>, <code class=\"language-text\">field:=@file.json</code></td>\n<td>Json 이 아닌 다른  형식( <code class=\"language-text\">Boolean</code>, <code class=\"language-text\">Number</code>, nested <code class=\"language-text\">Object</code>, or an <code class=\"language-text\">Array</code>)을 Json으로 보낼때 사용   <code class=\"language-text\">meals:=&#39;[&quot;ham&quot;,&quot;spam&quot;]&#39;</code> or <code class=\"language-text\">pies:=[1,2,3]</code> (따옴표 주의 ).</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n<p>reference <a href=\"https://httpie.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://httpie.org/</a></p>","fields":{"slug":"/posts/httpieintro/","tagSlugs":["/tag/backtend/","/tag/utility/","/tag/httpie/"]},"frontmatter":{"date":"2019-09-10T01:23:45.678Z","description":"터미널로 서버통신 해보기 어떻게? HTTPie로!","tags":["Backtend","Utility","Httpie"],"title":"HTTPie 뽀개기"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/httpieintro/"}}}